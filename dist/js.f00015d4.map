{"version":3,"sources":["C:\\Users\\V\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\process\\browser.js","..\\js\\diabetes_model.js","..\\js\\index.js"],"names":["process","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","call","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","nextTick","args","Array","arguments","i","push","Item","array","prototype","apply","title","browser","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","RandomForestClassifier","findMax","nums","index","trees","features","classes","predict","fill","slice","prediction","console","log","document","getElementById","addEventListener","display_predicton","value","innerHTML","coll","getElementsByClassName","classList","toggle","content","nextElementSibling","style","display"],"mappings":"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","file":"js.f00015d4.map","sourceRoot":"..\\src\\html","sourcesContent":["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","export var RandomForestClassifier = function() {\r\n\r\n    var findMax = function(nums) {\r\n        var index = 0;\r\n        for (var i = 0; i < nums.length; i++) {\r\n            index = nums[i] > nums[index] ? i : index;\r\n        }\r\n        return index;\r\n    };\r\n\r\n    var trees = new Array();\r\n\r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 24.5) {\r\n            if (features[2] <= 31.049999237060547) {\r\n                if (features[3] <= 21.5) {\r\n                    classes[0] = 30; \r\n                    classes[1] = 0; \r\n                } else {\r\n                    if (features[0] <= 2.5) {\r\n                        if (features[0] <= 1.5) {\r\n                            classes[0] = 32; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 12; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 26.549999237060547) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[0] <= 2.5) {\r\n                    if (features[1] <= 84.0) {\r\n                        if (features[3] <= 21.5) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 26; \r\n                            classes[1] = 4; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 22.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 55.0) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 4; \r\n                    } else {\r\n                        if (features[1] <= 68.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 4; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 28.5) {\r\n                if (features[0] <= 0.5) {\r\n                    if (features[2] <= 36.0) {\r\n                        if (features[1] <= 72.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 69.0) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 9; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 92.0) {\r\n                        if (features[1] <= 51.0) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 57; \r\n                            classes[1] = 27; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 2; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[1] <= 59.0) {\r\n                    if (features[0] <= 0.5) {\r\n                        if (features[1] <= 20.0) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 3.5) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 23.149999618530273) {\r\n                        if (features[1] <= 93.0) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 67.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 42; \r\n                        } else {\r\n                            classes[0] = 67; \r\n                            classes[1] = 154; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 29.25) {\r\n            if (features[0] <= 5.5) {\r\n                if (features[3] <= 26.5) {\r\n                    if (features[3] <= 21.5) {\r\n                        classes[0] = 32; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[1] <= 55.0) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 30; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 23.349998474121094) {\r\n                        classes[0] = 14; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[0] <= 2.5) {\r\n                            classes[0] = 8; \r\n                            classes[1] = 16; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 23.549999237060547) {\r\n                    if (features[3] <= 29.0) {\r\n                        classes[0] = 1; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[1] <= 80.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 11; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 52.0) {\r\n                        if (features[2] <= 25.350000381469727) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 16; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 7; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 28.5) {\r\n                if (features[2] <= 41.79999923706055) {\r\n                    if (features[0] <= 2.5) {\r\n                        if (features[0] <= 0.5) {\r\n                            classes[0] = 18; \r\n                            classes[1] = 12; \r\n                        } else {\r\n                            classes[0] = 43; \r\n                            classes[1] = 12; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 27.5) {\r\n                            classes[0] = 14; \r\n                            classes[1] = 19; \r\n                        } else {\r\n                            classes[0] = 6; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 44.69999694824219) {\r\n                        if (features[0] <= 1.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 24.5) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 11; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 42.5) {\r\n                    if (features[1] <= 89.0) {\r\n                        if (features[1] <= 75.0) {\r\n                            classes[0] = 26; \r\n                            classes[1] = 68; \r\n                        } else {\r\n                            classes[0] = 26; \r\n                            classes[1] = 17; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 33.900001525878906) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 16; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 62.0) {\r\n                        if (features[1] <= 87.0) {\r\n                            classes[0] = 6; \r\n                            classes[1] = 57; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 11; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 4.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 32.5) {\r\n            if (features[1] <= 73.0) {\r\n                if (features[2] <= 30.899999618530273) {\r\n                    if (features[0] <= 7.0) {\r\n                        if (features[2] <= 27.899999618530273) {\r\n                            classes[0] = 74; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 19; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 63.0) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 51.0) {\r\n                        if (features[0] <= 4.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 15; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 40.95000076293945) {\r\n                            classes[0] = 42; \r\n                            classes[1] = 22; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 6; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 42.80000305175781) {\r\n                    if (features[0] <= 2.5) {\r\n                        if (features[2] <= 31.600000381469727) {\r\n                            classes[0] = 24; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 18; \r\n                            classes[1] = 8; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 6.5) {\r\n                            classes[0] = 14; \r\n                            classes[1] = 16; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 8; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 75.0) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[1] <= 87.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 17; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 9; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[1] <= 40.0) {\r\n                classes[0] = 7; \r\n                classes[1] = 0; \r\n            } else {\r\n                if (features[0] <= 1.5) {\r\n                    if (features[3] <= 44.5) {\r\n                        if (features[3] <= 38.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 11; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 11; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 87.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 11; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 26.649999618530273) {\r\n                        if (features[0] <= 5.5) {\r\n                            classes[0] = 6; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 11; \r\n                            classes[1] = 6; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 2.5) {\r\n                            classes[0] = 5; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 48; \r\n                            classes[1] = 130; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 30.5) {\r\n            if (features[2] <= 30.899999618530273) {\r\n                if (features[3] <= 26.5) {\r\n                    if (features[1] <= 63.0) {\r\n                        if (features[2] <= 25.799999237060547) {\r\n                            classes[0] = 28; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 19; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 85.0) {\r\n                            classes[0] = 41; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 5; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 66.0) {\r\n                        if (features[0] <= 1.5) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 8; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 7.5) {\r\n                            classes[0] = 19; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[0] <= 5.5) {\r\n                    if (features[1] <= 51.0) {\r\n                        if (features[2] <= 34.400001525878906) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 11; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 4.5) {\r\n                            classes[0] = 72; \r\n                            classes[1] = 52; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 9; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 3; \r\n                    classes[1] = 0; \r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 61.5) {\r\n                if (features[2] <= 30.149999618530273) {\r\n                    if (features[2] <= 22.75) {\r\n                        classes[0] = 4; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[2] <= 28.599998474121094) {\r\n                            classes[0] = 18; \r\n                            classes[1] = 34; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 5; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 10.5) {\r\n                        if (features[1] <= 35.0) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 29; \r\n                            classes[1] = 132; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 38.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 6; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[0] <= 4.5) {\r\n                    if (features[2] <= 29.600000381469727) {\r\n                        classes[0] = 3; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 4; \r\n                    }\r\n                } else {\r\n                    classes[0] = 10; \r\n                    classes[1] = 0; \r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[1] <= 65.5) {\r\n            if (features[2] <= 29.600000381469727) {\r\n                if (features[0] <= 6.5) {\r\n                    if (features[0] <= 2.5) {\r\n                        classes[0] = 46; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[1] <= 61.0) {\r\n                            classes[0] = 22; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 26.200000762939453) {\r\n                        if (features[2] <= 23.849998474121094) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 5; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 25.5) {\r\n                    if (features[2] <= 37.0) {\r\n                        if (features[2] <= 31.25) {\r\n                            classes[0] = 5; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 19; \r\n                            classes[1] = 6; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 0.5) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 5; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 33.69999694824219) {\r\n                        if (features[0] <= 5.5) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 20; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 4; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 39.0) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 11; \r\n                            classes[1] = 6; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 28.849998474121094) {\r\n                if (features[2] <= 25.049999237060547) {\r\n                    if (features[2] <= 9.199999809265137) {\r\n                        if (features[1] <= 89.0) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 31.5) {\r\n                            classes[0] = 14; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 13; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 71.0) {\r\n                        if (features[3] <= 27.0) {\r\n                            classes[0] = 6; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 9; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 10.5) {\r\n                            classes[0] = 26; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 40.75) {\r\n                    if (features[2] <= 35.650001525878906) {\r\n                        if (features[1] <= 87.0) {\r\n                            classes[0] = 51; \r\n                            classes[1] = 73; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 13; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 91.0) {\r\n                            classes[0] = 36; \r\n                            classes[1] = 35; \r\n                        } else {\r\n                            classes[0] = 6; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 8.0) {\r\n                        if (features[3] <= 46.5) {\r\n                            classes[0] = 10; \r\n                            classes[1] = 41; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 16; \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 26.299999237060547) {\r\n            if (features[1] <= 94.0) {\r\n                if (features[0] <= 9.5) {\r\n                    if (features[0] <= 2.5) {\r\n                        classes[0] = 46; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[3] <= 48.0) {\r\n                            classes[0] = 29; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 5; \r\n                            classes[1] = 6; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 25.700000762939453) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 4; \r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[0] <= 5.0) {\r\n                    classes[0] = 2; \r\n                    classes[1] = 0; \r\n                } else {\r\n                    if (features[0] <= 9.0) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 4; \r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 41.75) {\r\n                if (features[3] <= 26.5) {\r\n                    if (features[2] <= 30.899999618530273) {\r\n                        if (features[1] <= 85.0) {\r\n                            classes[0] = 41; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 63.0) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 20; \r\n                        } else {\r\n                            classes[0] = 43; \r\n                            classes[1] = 19; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 61.5) {\r\n                        if (features[0] <= 6.5) {\r\n                            classes[0] = 58; \r\n                            classes[1] = 119; \r\n                        } else {\r\n                            classes[0] = 12; \r\n                            classes[1] = 75; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 34.20000076293945) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[0] <= 3.5) {\r\n                    if (features[1] <= 87.0) {\r\n                        if (features[1] <= 77.0) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 9; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 6; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 89.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 8; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 70.0) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[0] <= 6.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 15; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 15; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 28.799999237060547) {\r\n            if (features[0] <= 5.5) {\r\n                if (features[2] <= 22.75) {\r\n                    classes[0] = 21; \r\n                    classes[1] = 0; \r\n                } else {\r\n                    if (features[3] <= 45.5) {\r\n                        if (features[0] <= 1.5) {\r\n                            classes[0] = 29; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 34; \r\n                            classes[1] = 11; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 73.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 60.5) {\r\n                    if (features[3] <= 28.5) {\r\n                        if (features[0] <= 7.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 97.0) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 37; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 4; \r\n                    classes[1] = 0; \r\n                }\r\n            }\r\n        } else {\r\n            if (features[1] <= 89.0) {\r\n                if (features[0] <= 3.5) {\r\n                    if (features[3] <= 23.5) {\r\n                        if (features[1] <= 81.0) {\r\n                            classes[0] = 32; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 71.0) {\r\n                            classes[0] = 31; \r\n                            classes[1] = 60; \r\n                        } else {\r\n                            classes[0] = 39; \r\n                            classes[1] = 24; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 85.0) {\r\n                        if (features[3] <= 25.5) {\r\n                            classes[0] = 5; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 43; \r\n                            classes[1] = 121; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 31.400001525878906) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 12; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 53.5) {\r\n                    if (features[0] <= 2.5) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 16; \r\n                    } else {\r\n                        if (features[1] <= 100.5) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 6; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 1.5) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 1; \r\n                    } else {\r\n                        classes[0] = 1; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[0] <= 5.5) {\r\n            if (features[2] <= 28.849998474121094) {\r\n                if (features[3] <= 28.5) {\r\n                    if (features[0] <= 2.5) {\r\n                        classes[0] = 61; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[1] <= 56.0) {\r\n                            classes[0] = 5; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 12; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 54.5) {\r\n                        if (features[0] <= 2.5) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 6; \r\n                        } else {\r\n                            classes[0] = 6; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 10; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[0] <= 0.5) {\r\n                    if (features[3] <= 23.5) {\r\n                        if (features[2] <= 34.75) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 36.04999923706055) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 27; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 2.5) {\r\n                        if (features[1] <= 49.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 73; \r\n                            classes[1] = 20; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 61.0) {\r\n                            classes[0] = 10; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 46; \r\n                            classes[1] = 67; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 24.25) {\r\n                if (features[2] <= 23.549999237060547) {\r\n                    if (features[2] <= 23.200000762939453) {\r\n                        if (features[2] <= 9.949999809265137) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 2; \r\n                    }\r\n                } else {\r\n                    classes[0] = 3; \r\n                    classes[1] = 0; \r\n                }\r\n            } else {\r\n                if (features[3] <= 58.5) {\r\n                    if (features[1] <= 89.0) {\r\n                        if (features[2] <= 40.75) {\r\n                            classes[0] = 29; \r\n                            classes[1] = 73; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 16; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 17; \r\n                    }\r\n                } else {\r\n                    classes[0] = 6; \r\n                    classes[1] = 0; \r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 28.5) {\r\n            if (features[2] <= 30.950000762939453) {\r\n                if (features[0] <= 7.5) {\r\n                    if (features[0] <= 2.5) {\r\n                        if (features[2] <= 30.450000762939453) {\r\n                            classes[0] = 69; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 6; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 3.5) {\r\n                            classes[0] = 18; \r\n                            classes[1] = 6; \r\n                        } else {\r\n                            classes[0] = 14; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 0; \r\n                    classes[1] = 5; \r\n                }\r\n            } else {\r\n                if (features[1] <= 51.0) {\r\n                    if (features[0] <= 4.5) {\r\n                        if (features[1] <= 49.0) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 8; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 3; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[1] <= 84.0) {\r\n                        if (features[0] <= 2.5) {\r\n                            classes[0] = 51; \r\n                            classes[1] = 24; \r\n                        } else {\r\n                            classes[0] = 15; \r\n                            classes[1] = 20; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 99.0) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 13; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 29.650001525878906) {\r\n                if (features[3] <= 40.5) {\r\n                    if (features[0] <= 6.5) {\r\n                        if (features[2] <= 28.349998474121094) {\r\n                            classes[0] = 10; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 32.5) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 6; \r\n                        } else {\r\n                            classes[0] = 6; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 55.5) {\r\n                        if (features[3] <= 53.5) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 24; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 60.5) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 37.650001525878906) {\r\n                    if (features[0] <= 12.5) {\r\n                        if (features[2] <= 36.599998474121094) {\r\n                            classes[0] = 33; \r\n                            classes[1] = 101; \r\n                        } else {\r\n                            classes[0] = 6; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 3; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[2] <= 46.0) {\r\n                        if (features[3] <= 37.5) {\r\n                            classes[0] = 5; \r\n                            classes[1] = 22; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 38; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 74.0) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[0] <= 3.5) {\r\n            if (features[3] <= 27.5) {\r\n                if (features[0] <= 0.5) {\r\n                    if (features[1] <= 64.5) {\r\n                        if (features[3] <= 21.5) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 14; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 87.0) {\r\n                            classes[0] = 11; \r\n                            classes[1] = 9; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 9; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 39.900001525878906) {\r\n                        if (features[0] <= 2.5) {\r\n                            classes[0] = 85; \r\n                            classes[1] = 11; \r\n                        } else {\r\n                            classes[0] = 19; \r\n                            classes[1] = 9; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 2.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 6; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 62.5) {\r\n                    if (features[0] <= 1.5) {\r\n                        if (features[3] <= 32.5) {\r\n                            classes[0] = 14; \r\n                            classes[1] = 22; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 27; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 36.45000076293945) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 16; \r\n                        } else {\r\n                            classes[0] = 5; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 3; \r\n                    classes[1] = 0; \r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 28.849998474121094) {\r\n                if (features[2] <= 28.5) {\r\n                    if (features[1] <= 83.0) {\r\n                        if (features[3] <= 43.0) {\r\n                            classes[0] = 26; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 13; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 28.149999618530273) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 5; \r\n                    classes[1] = 0; \r\n                }\r\n            } else {\r\n                if (features[1] <= 84.5) {\r\n                    if (features[1] <= 59.0) {\r\n                        if (features[2] <= 37.599998474121094) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 10.5) {\r\n                            classes[0] = 37; \r\n                            classes[1] = 121; \r\n                        } else {\r\n                            classes[0] = 6; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 33.900001525878906) {\r\n                        if (features[3] <= 41.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 8; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 89.0) {\r\n                            classes[0] = 13; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 5; \r\n                            classes[1] = 6; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 27.5) {\r\n            if (features[0] <= 2.5) {\r\n                if (features[2] <= 41.75) {\r\n                    if (features[2] <= 28.799999237060547) {\r\n                        classes[0] = 67; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[1] <= 71.0) {\r\n                            classes[0] = 41; \r\n                            classes[1] = 15; \r\n                        } else {\r\n                            classes[0] = 19; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 53.650001525878906) {\r\n                        if (features[1] <= 56.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 15; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 6; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 25.5) {\r\n                    if (features[2] <= 34.599998474121094) {\r\n                        if (features[1] <= 71.0) {\r\n                            classes[0] = 29; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 6; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 88.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 3.5) {\r\n                        if (features[3] <= 26.5) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 4; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 30.799999237060547) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 6; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[0] <= 5.5) {\r\n                if (features[0] <= 1.5) {\r\n                    if (features[3] <= 32.5) {\r\n                        if (features[1] <= 71.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 20; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 35.0) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 8; \r\n                            classes[1] = 35; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 26.899999618530273) {\r\n                        classes[0] = 14; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[3] <= 62.5) {\r\n                            classes[0] = 37; \r\n                            classes[1] = 52; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 40.55000305175781) {\r\n                    if (features[3] <= 59.5) {\r\n                        if (features[3] <= 52.5) {\r\n                            classes[0] = 35; \r\n                            classes[1] = 67; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 12; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 4; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[0] <= 7.5) {\r\n                        if (features[0] <= 6.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 15; \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 29.5) {\r\n            if (features[1] <= 69.0) {\r\n                if (features[3] <= 22.5) {\r\n                    if (features[1] <= 59.0) {\r\n                        classes[0] = 19; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[0] <= 1.5) {\r\n                            classes[0] = 11; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 14; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 35.650001525878906) {\r\n                        if (features[3] <= 27.5) {\r\n                            classes[0] = 47; \r\n                            classes[1] = 6; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 5; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 27.5) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 12; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 24.5) {\r\n                    if (features[0] <= 2.5) {\r\n                        if (features[1] <= 77.0) {\r\n                            classes[0] = 16; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 20; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 31.600000381469727) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 9; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 81.0) {\r\n                        if (features[0] <= 2.5) {\r\n                            classes[0] = 19; \r\n                            classes[1] = 13; \r\n                        } else {\r\n                            classes[0] = 5; \r\n                            classes[1] = 19; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 1.5) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 26.75) {\r\n                if (features[0] <= 5.5) {\r\n                    classes[0] = 10; \r\n                    classes[1] = 0; \r\n                } else {\r\n                    if (features[1] <= 64.0) {\r\n                        if (features[0] <= 8.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 83.0) {\r\n                            classes[0] = 16; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 62.5) {\r\n                    if (features[1] <= 77.0) {\r\n                        if (features[3] <= 34.5) {\r\n                            classes[0] = 14; \r\n                            classes[1] = 26; \r\n                        } else {\r\n                            classes[0] = 13; \r\n                            classes[1] = 90; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 8.5) {\r\n                            classes[0] = 33; \r\n                            classes[1] = 45; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 31; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 37.04999923706055) {\r\n                        if (features[3] <= 69.5) {\r\n                            classes[0] = 10; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 1; \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 29.5) {\r\n            if (features[3] <= 26.5) {\r\n                if (features[2] <= 31.100000381469727) {\r\n                    if (features[1] <= 85.0) {\r\n                        if (features[3] <= 24.5) {\r\n                            classes[0] = 72; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 21; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 5.5) {\r\n                            classes[0] = 6; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 55.0) {\r\n                        if (features[2] <= 32.70000076293945) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 12; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 0.5) {\r\n                            classes[0] = 16; \r\n                            classes[1] = 19; \r\n                        } else {\r\n                            classes[0] = 42; \r\n                            classes[1] = 15; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 26.200000762939453) {\r\n                    classes[0] = 8; \r\n                    classes[1] = 0; \r\n                } else {\r\n                    if (features[2] <= 33.54999923706055) {\r\n                        if (features[2] <= 27.549999237060547) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 19; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 42.849998474121094) {\r\n                            classes[0] = 24; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 5; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[0] <= 5.5) {\r\n                if (features[0] <= 1.5) {\r\n                    if (features[2] <= 37.29999923706055) {\r\n                        if (features[2] <= 34.04999923706055) {\r\n                            classes[0] = 6; \r\n                            classes[1] = 15; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 19; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 41.0) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 61.0) {\r\n                        if (features[3] <= 36.5) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 5; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 22.950000762939453) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 27; \r\n                            classes[1] = 41; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 59.0) {\r\n                    if (features[2] <= 30.25) {\r\n                        if (features[3] <= 52.0) {\r\n                            classes[0] = 13; \r\n                            classes[1] = 26; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 57.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 14; \r\n                            classes[1] = 86; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 5; \r\n                    classes[1] = 0; \r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 28.5) {\r\n            if (features[0] <= 0.5) {\r\n                if (features[2] <= 31.399999618530273) {\r\n                    classes[0] = 18; \r\n                    classes[1] = 0; \r\n                } else {\r\n                    if (features[2] <= 41.79999923706055) {\r\n                        if (features[2] <= 34.400001525878906) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 9; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 12; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 12; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 22.5) {\r\n                    if (features[2] <= 39.75) {\r\n                        if (features[1] <= 65.0) {\r\n                            classes[0] = 29; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 25; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 4; \r\n                    }\r\n                } else {\r\n                    if (features[0] <= 2.5) {\r\n                        if (features[1] <= 91.0) {\r\n                            classes[0] = 55; \r\n                            classes[1] = 12; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 5; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 3.5) {\r\n                            classes[0] = 16; \r\n                            classes[1] = 24; \r\n                        } else {\r\n                            classes[0] = 14; \r\n                            classes[1] = 5; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 26.700000762939453) {\r\n                if (features[3] <= 29.5) {\r\n                    classes[0] = 0; \r\n                    classes[1] = 1; \r\n                } else {\r\n                    if (features[0] <= 6.5) {\r\n                        if (features[0] <= 1.5) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 14; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 76.0) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 32.5) {\r\n                    if (features[1] <= 87.0) {\r\n                        if (features[1] <= 77.0) {\r\n                            classes[0] = 15; \r\n                            classes[1] = 26; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 13; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 2.0) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 62.0) {\r\n                        if (features[2] <= 30.849998474121094) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 52; \r\n                        } else {\r\n                            classes[0] = 40; \r\n                            classes[1] = 126; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 69.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 26.700000762939453) {\r\n            if (features[0] <= 7.5) {\r\n                if (features[0] <= 2.5) {\r\n                    if (features[2] <= 26.5) {\r\n                        classes[0] = 47; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[1] <= 70.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 23.5) {\r\n                        if (features[1] <= 49.0) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 45.5) {\r\n                            classes[0] = 18; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 5; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 23.649999618530273) {\r\n                    if (features[3] <= 39.0) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 4; \r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[3] <= 44.5) {\r\n                        classes[0] = 5; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[0] <= 8.5) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 30.5) {\r\n                if (features[3] <= 21.5) {\r\n                    classes[0] = 13; \r\n                    classes[1] = 0; \r\n                } else {\r\n                    if (features[0] <= 0.5) {\r\n                        if (features[1] <= 79.0) {\r\n                            classes[0] = 9; \r\n                            classes[1] = 26; \r\n                        } else {\r\n                            classes[0] = 9; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 42.25) {\r\n                            classes[0] = 92; \r\n                            classes[1] = 38; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 16; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[0] <= 5.5) {\r\n                    if (features[3] <= 46.5) {\r\n                        if (features[1] <= 95.0) {\r\n                            classes[0] = 37; \r\n                            classes[1] = 44; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 9; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 2.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 22; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 8; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 60.5) {\r\n                        if (features[2] <= 39.04999923706055) {\r\n                            classes[0] = 24; \r\n                            classes[1] = 71; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 37; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 2; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 28.5) {\r\n            if (features[2] <= 40.29999923706055) {\r\n                if (features[3] <= 24.5) {\r\n                    if (features[1] <= 85.0) {\r\n                        if (features[0] <= 2.5) {\r\n                            classes[0] = 88; \r\n                            classes[1] = 6; \r\n                        } else {\r\n                            classes[0] = 27; \r\n                            classes[1] = 8; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 5.5) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 29.950000762939453) {\r\n                        classes[0] = 32; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[0] <= 2.5) {\r\n                            classes[0] = 16; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 17; \r\n                            classes[1] = 17; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 42.25) {\r\n                    if (features[2] <= 40.54999923706055) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 2; \r\n                    } else {\r\n                        if (features[3] <= 27.5) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 95.0) {\r\n                        if (features[0] <= 0.5) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 11; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 24.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 62.5) {\r\n                if (features[1] <= 59.0) {\r\n                    if (features[3] <= 36.5) {\r\n                        if (features[0] <= 0.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 8; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[2] <= 27.849998474121094) {\r\n                        if (features[2] <= 22.899999618530273) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 18; \r\n                            classes[1] = 24; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 67.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 23; \r\n                        } else {\r\n                            classes[0] = 54; \r\n                            classes[1] = 139; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 32.45000076293945) {\r\n                    classes[0] = 12; \r\n                    classes[1] = 0; \r\n                } else {\r\n                    if (features[3] <= 69.0) {\r\n                        classes[0] = 2; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 1; \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 28.849998474121094) {\r\n            if (features[2] <= 25.450000762939453) {\r\n                if (features[3] <= 53.5) {\r\n                    if (features[0] <= 7.5) {\r\n                        if (features[1] <= 63.0) {\r\n                            classes[0] = 25; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 32; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 32.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 5.5) {\r\n                        classes[0] = 2; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[2] <= 9.800000190734863) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 32.5) {\r\n                    if (features[2] <= 26.700000762939453) {\r\n                        if (features[1] <= 56.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 12; \r\n                            classes[1] = 4; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 33; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[1] <= 73.0) {\r\n                        if (features[2] <= 28.599998474121094) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 11; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 10.5) {\r\n                            classes[0] = 9; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 29.5) {\r\n                if (features[3] <= 21.5) {\r\n                    if (features[1] <= 85.0) {\r\n                        classes[0] = 13; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 1; \r\n                    }\r\n                } else {\r\n                    if (features[2] <= 42.25) {\r\n                        if (features[0] <= 2.5) {\r\n                            classes[0] = 53; \r\n                            classes[1] = 16; \r\n                        } else {\r\n                            classes[0] = 25; \r\n                            classes[1] = 34; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 74.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 16; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 66.0) {\r\n                    if (features[3] <= 62.5) {\r\n                        if (features[1] <= 97.5) {\r\n                            classes[0] = 62; \r\n                            classes[1] = 165; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 13; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 3; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    classes[0] = 0; \r\n                    classes[1] = 8; \r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 29.549999237060547) {\r\n            if (features[3] <= 28.5) {\r\n                if (features[3] <= 26.5) {\r\n                    if (features[0] <= 2.5) {\r\n                        classes[0] = 64; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[1] <= 61.0) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 29.0) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 1; \r\n                    } else {\r\n                        if (features[2] <= 25.849998474121094) {\r\n                            classes[0] = 10; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 52.5) {\r\n                    if (features[2] <= 29.149999618530273) {\r\n                        if (features[0] <= 5.5) {\r\n                            classes[0] = 18; \r\n                            classes[1] = 12; \r\n                        } else {\r\n                            classes[0] = 6; \r\n                            classes[1] = 23; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 3; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[2] <= 27.849998474121094) {\r\n                        if (features[1] <= 79.0) {\r\n                            classes[0] = 8; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 61.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[0] <= 5.5) {\r\n                if (features[3] <= 24.5) {\r\n                    if (features[2] <= 41.599998474121094) {\r\n                        if (features[1] <= 25.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 60; \r\n                            classes[1] = 11; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 95.0) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 9; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 3.5) {\r\n                        if (features[3] <= 49.0) {\r\n                            classes[0] = 35; \r\n                            classes[1] = 73; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 6; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 34.5) {\r\n                            classes[0] = 23; \r\n                            classes[1] = 13; \r\n                        } else {\r\n                            classes[0] = 8; \r\n                            classes[1] = 19; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 59.0) {\r\n                    if (features[2] <= 40.75) {\r\n                        if (features[1] <= 54.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 25; \r\n                            classes[1] = 59; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 69.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 22; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 3; \r\n                    classes[1] = 0; \r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 26.5) {\r\n            if (features[3] <= 31.5) {\r\n                if (features[2] <= 22.950000762939453) {\r\n                    if (features[3] <= 24.0) {\r\n                        if (features[2] <= 22.75) {\r\n                            classes[0] = 11; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 5; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 11; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[1] <= 55.0) {\r\n                        if (features[1] <= 53.0) {\r\n                            classes[0] = 10; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 43; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[1] <= 63.0) {\r\n                    classes[0] = 7; \r\n                    classes[1] = 0; \r\n                } else {\r\n                    if (features[3] <= 56.0) {\r\n                        if (features[1] <= 71.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 5; \r\n                            classes[1] = 8; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 79.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 5; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[0] <= 2.5) {\r\n                if (features[2] <= 45.400001525878906) {\r\n                    if (features[3] <= 32.5) {\r\n                        if (features[1] <= 12.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 85; \r\n                            classes[1] = 34; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 41.150001525878906) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 28; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 30.0) {\r\n                        if (features[0] <= 0.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 6; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 6; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 39.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 34.5) {\r\n                    if (features[0] <= 6.5) {\r\n                        if (features[2] <= 41.69999694824219) {\r\n                            classes[0] = 49; \r\n                            classes[1] = 45; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 34.29999923706055) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 62.0) {\r\n                        if (features[1] <= 55.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 29; \r\n                            classes[1] = 107; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 80.0) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 26.25) {\r\n            if (features[0] <= 5.5) {\r\n                if (features[2] <= 25.700000762939453) {\r\n                    if (features[2] <= 22.75) {\r\n                        classes[0] = 32; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[3] <= 22.5) {\r\n                            classes[0] = 17; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 20; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 4.0) {\r\n                        classes[0] = 2; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 1; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 23.549999237060547) {\r\n                    if (features[3] <= 50.0) {\r\n                        if (features[1] <= 68.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 4; \r\n                    }\r\n                } else {\r\n                    if (features[0] <= 8.5) {\r\n                        classes[0] = 8; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[2] <= 24.200000762939453) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[0] <= 2.5) {\r\n                if (features[3] <= 24.5) {\r\n                    if (features[3] <= 22.5) {\r\n                        if (features[1] <= 51.0) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 39; \r\n                            classes[1] = 5; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 53.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 21; \r\n                            classes[1] = 5; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 1.5) {\r\n                        if (features[2] <= 34.04999923706055) {\r\n                            classes[0] = 13; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 11; \r\n                            classes[1] = 52; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 24.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 18; \r\n                            classes[1] = 11; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 38.400001525878906) {\r\n                    if (features[0] <= 5.5) {\r\n                        if (features[0] <= 4.5) {\r\n                            classes[0] = 27; \r\n                            classes[1] = 55; \r\n                        } else {\r\n                            classes[0] = 23; \r\n                            classes[1] = 11; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 38.25) {\r\n                            classes[0] = 25; \r\n                            classes[1] = 77; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 77.0) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 23; \r\n                    } else {\r\n                        if (features[1] <= 79.0) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 26; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 30.5) {\r\n            if (features[2] <= 32.25) {\r\n                if (features[3] <= 26.5) {\r\n                    if (features[0] <= 7.5) {\r\n                        if (features[0] <= 2.5) {\r\n                            classes[0] = 88; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 19; \r\n                            classes[1] = 4; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 1; \r\n                    }\r\n                } else {\r\n                    if (features[2] <= 26.200000762939453) {\r\n                        classes[0] = 14; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[0] <= 7.0) {\r\n                            classes[0] = 18; \r\n                            classes[1] = 11; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[1] <= 51.0) {\r\n                    if (features[0] <= 4.5) {\r\n                        if (features[2] <= 36.650001525878906) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 9; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 12; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[1] <= 89.0) {\r\n                        if (features[3] <= 26.5) {\r\n                            classes[0] = 50; \r\n                            classes[1] = 20; \r\n                        } else {\r\n                            classes[0] = 20; \r\n                            classes[1] = 19; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 24.5) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 5; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 34.25) {\r\n                if (features[3] <= 59.5) {\r\n                    if (features[2] <= 23.200000762939453) {\r\n                        classes[0] = 6; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[3] <= 43.5) {\r\n                            classes[0] = 31; \r\n                            classes[1] = 41; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 38; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 69.5) {\r\n                        classes[0] = 15; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[3] <= 75.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 47.79999923706055) {\r\n                    if (features[3] <= 42.5) {\r\n                        if (features[2] <= 46.0) {\r\n                            classes[0] = 12; \r\n                            classes[1] = 38; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 34.650001525878906) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 49; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 0; \r\n                    classes[1] = 6; \r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 27.5) {\r\n            if (features[3] <= 21.5) {\r\n                if (features[1] <= 88.0) {\r\n                    classes[0] = 27; \r\n                    classes[1] = 0; \r\n                } else {\r\n                    if (features[2] <= 33.650001525878906) {\r\n                        classes[0] = 2; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 1; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 28.200000762939453) {\r\n                    if (features[1] <= 63.0) {\r\n                        if (features[2] <= 23.0) {\r\n                            classes[0] = 15; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 16; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 25; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[0] <= 7.0) {\r\n                        if (features[1] <= 37.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 72; \r\n                            classes[1] = 41; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 2; \r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[1] <= 95.5) {\r\n                if (features[3] <= 59.5) {\r\n                    if (features[2] <= 26.200000762939453) {\r\n                        if (features[0] <= 5.5) {\r\n                            classes[0] = 14; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 8; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 31.400001525878906) {\r\n                            classes[0] = 21; \r\n                            classes[1] = 81; \r\n                        } else {\r\n                            classes[0] = 55; \r\n                            classes[1] = 124; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 0.5) {\r\n                        if (features[1] <= 72.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 32.45000076293945) {\r\n                            classes[0] = 14; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 5; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[0] <= 10.0) {\r\n                    classes[0] = 0; \r\n                    classes[1] = 17; \r\n                } else {\r\n                    classes[0] = 0; \r\n                    classes[1] = 0; \r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 30.25) {\r\n            if (features[0] <= 5.5) {\r\n                if (features[3] <= 41.0) {\r\n                    if (features[1] <= 12.0) {\r\n                        if (features[2] <= 26.25) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 25.5) {\r\n                            classes[0] = 61; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 55; \r\n                            classes[1] = 8; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 62.5) {\r\n                        if (features[3] <= 49.5) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 5; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 3; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 28.450000762939453) {\r\n                    if (features[1] <= 65.0) {\r\n                        if (features[3] <= 27.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 15; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 27.950000762939453) {\r\n                            classes[0] = 13; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 7; \r\n                    classes[1] = 0; \r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 30.5) {\r\n                if (features[1] <= 51.0) {\r\n                    if (features[0] <= 7.0) {\r\n                        if (features[2] <= 34.400001525878906) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 8; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[2] <= 41.75) {\r\n                        if (features[0] <= 0.5) {\r\n                            classes[0] = 14; \r\n                            classes[1] = 19; \r\n                        } else {\r\n                            classes[0] = 65; \r\n                            classes[1] = 22; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 95.0) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 28; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[1] <= 89.0) {\r\n                    if (features[3] <= 38.5) {\r\n                        if (features[1] <= 35.0) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 9; \r\n                            classes[1] = 60; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 39.5) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 29; \r\n                            classes[1] = 64; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 34.19999694824219) {\r\n                        if (features[3] <= 42.5) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 6; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 26; \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 27.5) {\r\n            if (features[1] <= 85.0) {\r\n                if (features[2] <= 43.150001525878906) {\r\n                    if (features[2] <= 28.799999237060547) {\r\n                        if (features[1] <= 61.0) {\r\n                            classes[0] = 45; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 35; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 22.5) {\r\n                            classes[0] = 30; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 41; \r\n                            classes[1] = 24; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 24.5) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 8; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[1] <= 95.0) {\r\n                    if (features[2] <= 40.79999923706055) {\r\n                        if (features[0] <= 6.0) {\r\n                            classes[0] = 6; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 89.0) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 9; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 1; \r\n                    classes[1] = 0; \r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 34.5) {\r\n                if (features[1] <= 74.5) {\r\n                    if (features[0] <= 8.5) {\r\n                        if (features[1] <= 67.0) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 30; \r\n                        } else {\r\n                            classes[0] = 20; \r\n                            classes[1] = 30; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 72.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 89.0) {\r\n                        if (features[0] <= 2.5) {\r\n                            classes[0] = 13; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 13; \r\n                            classes[1] = 6; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 43.650001525878906) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[1] <= 59.0) {\r\n                    if (features[3] <= 38.5) {\r\n                        if (features[2] <= 27.600000381469727) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 39.20000076293945) {\r\n                            classes[0] = 5; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 89.0) {\r\n                        if (features[3] <= 62.5) {\r\n                            classes[0] = 47; \r\n                            classes[1] = 121; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 4; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 43.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 15; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 9; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 28.149999618530273) {\r\n            if (features[0] <= 5.5) {\r\n                if (features[3] <= 26.5) {\r\n                    if (features[2] <= 23.0) {\r\n                        if (features[0] <= 2.5) {\r\n                            classes[0] = 13; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 5; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 39; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[1] <= 27.0) {\r\n                        if (features[3] <= 50.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 26.200000762939453) {\r\n                            classes[0] = 14; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 12; \r\n                            classes[1] = 4; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 56.0) {\r\n                    if (features[3] <= 42.5) {\r\n                        if (features[0] <= 6.5) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 11; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 54.5) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 8; \r\n                    classes[1] = 0; \r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 30.5) {\r\n                if (features[1] <= 53.0) {\r\n                    if (features[0] <= 4.5) {\r\n                        if (features[2] <= 31.600000381469727) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 26; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 3; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[2] <= 41.75) {\r\n                        if (features[1] <= 59.0) {\r\n                            classes[0] = 12; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 96; \r\n                            classes[1] = 46; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 21.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 15; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[0] <= 5.5) {\r\n                    if (features[1] <= 109.0) {\r\n                        if (features[2] <= 29.149999618530273) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 11; \r\n                        } else {\r\n                            classes[0] = 33; \r\n                            classes[1] = 52; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[2] <= 35.75) {\r\n                        if (features[3] <= 57.0) {\r\n                            classes[0] = 14; \r\n                            classes[1] = 39; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 39.5) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 6; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 53; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 27.849998474121094) {\r\n            if (features[0] <= 3.5) {\r\n                if (features[3] <= 27.5) {\r\n                    if (features[0] <= 2.5) {\r\n                        classes[0] = 63; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[1] <= 57.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 9; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 29.0) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 1; \r\n                    } else {\r\n                        if (features[3] <= 33.5) {\r\n                            classes[0] = 9; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[1] <= 71.0) {\r\n                    if (features[2] <= 24.349998474121094) {\r\n                        if (features[0] <= 8.5) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 8; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[3] <= 38.0) {\r\n                        classes[0] = 8; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[1] <= 84.0) {\r\n                            classes[0] = 12; \r\n                            classes[1] = 16; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 9; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 24.5) {\r\n                if (features[0] <= 0.5) {\r\n                    if (features[2] <= 31.399999618530273) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[1] <= 79.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 6; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 2.5) {\r\n                        if (features[1] <= 82.0) {\r\n                            classes[0] = 36; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 35.70000076293945) {\r\n                            classes[0] = 10; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[0] <= 7.5) {\r\n                    if (features[3] <= 40.5) {\r\n                        if (features[1] <= 79.0) {\r\n                            classes[0] = 43; \r\n                            classes[1] = 82; \r\n                        } else {\r\n                            classes[0] = 28; \r\n                            classes[1] = 22; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 41.099998474121094) {\r\n                            classes[0] = 12; \r\n                            classes[1] = 60; \r\n                        } else {\r\n                            classes[0] = 6; \r\n                            classes[1] = 6; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 36.0) {\r\n                        if (features[1] <= 84.5) {\r\n                            classes[0] = 12; \r\n                            classes[1] = 31; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 70.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 35; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[0] <= 6.5) {\r\n            if (features[2] <= 27.25) {\r\n                if (features[2] <= 25.5) {\r\n                    if (features[0] <= 5.5) {\r\n                        if (features[3] <= 31.5) {\r\n                            classes[0] = 50; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 24.0) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 29.0) {\r\n                        if (features[1] <= 73.0) {\r\n                            classes[0] = 8; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 41.5) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 41.75) {\r\n                    if (features[2] <= 36.54999923706055) {\r\n                        if (features[0] <= 2.5) {\r\n                            classes[0] = 55; \r\n                            classes[1] = 45; \r\n                        } else {\r\n                            classes[0] = 49; \r\n                            classes[1] = 86; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 32.0) {\r\n                            classes[0] = 35; \r\n                            classes[1] = 11; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 11; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 46.5) {\r\n                        if (features[1] <= 79.0) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 13; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 27; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 2; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 59.5) {\r\n                if (features[1] <= 81.0) {\r\n                    if (features[2] <= 27.350000381469727) {\r\n                        if (features[3] <= 32.5) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 12; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 35.650001525878906) {\r\n                            classes[0] = 12; \r\n                            classes[1] = 30; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 27; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 12.5) {\r\n                        if (features[1] <= 103.0) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 31; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 41.5) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                classes[0] = 5; \r\n                classes[1] = 0; \r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 26.299999237060547) {\r\n            if (features[3] <= 48.5) {\r\n                if (features[0] <= 2.5) {\r\n                    classes[0] = 45; \r\n                    classes[1] = 0; \r\n                } else {\r\n                    if (features[2] <= 9.649999618530273) {\r\n                        if (features[3] <= 26.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 23.399999618530273) {\r\n                            classes[0] = 17; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 31; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 52.0) {\r\n                    classes[0] = 0; \r\n                    classes[1] = 2; \r\n                } else {\r\n                    if (features[3] <= 58.5) {\r\n                        if (features[1] <= 80.5) {\r\n                            classes[0] = 9; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 63.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[0] <= 6.5) {\r\n                if (features[3] <= 24.5) {\r\n                    if (features[2] <= 31.100000381469727) {\r\n                        if (features[1] <= 69.0) {\r\n                            classes[0] = 21; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 0.5) {\r\n                            classes[0] = 8; \r\n                            classes[1] = 12; \r\n                        } else {\r\n                            classes[0] = 23; \r\n                            classes[1] = 13; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 85.0) {\r\n                        if (features[2] <= 43.44999694824219) {\r\n                            classes[0] = 71; \r\n                            classes[1] = 103; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 13; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 1.5) {\r\n                            classes[0] = 9; \r\n                            classes[1] = 15; \r\n                        } else {\r\n                            classes[0] = 18; \r\n                            classes[1] = 6; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 38.79999923706055) {\r\n                    if (features[0] <= 13.5) {\r\n                        if (features[2] <= 30.850000381469727) {\r\n                            classes[0] = 5; \r\n                            classes[1] = 19; \r\n                        } else {\r\n                            classes[0] = 20; \r\n                            classes[1] = 24; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 5; \r\n                    }\r\n                } else {\r\n                    if (features[3] <= 42.5) {\r\n                        if (features[3] <= 41.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 13; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 19; \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 28.5) {\r\n            if (features[0] <= 0.5) {\r\n                if (features[1] <= 67.0) {\r\n                    if (features[3] <= 23.5) {\r\n                        if (features[1] <= 65.0) {\r\n                            classes[0] = 12; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 35.79999923706055) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 13; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 88.0) {\r\n                        if (features[3] <= 23.5) {\r\n                            classes[0] = 9; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 100.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 41.849998474121094) {\r\n                    if (features[2] <= 26.200000762939453) {\r\n                        if (features[0] <= 2.5) {\r\n                            classes[0] = 40; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 17; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 26.700000762939453) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 6; \r\n                        } else {\r\n                            classes[0] = 93; \r\n                            classes[1] = 23; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 22.5) {\r\n                        if (features[1] <= 88.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 4; \r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 27.849998474121094) {\r\n                if (features[1] <= 74.5) {\r\n                    if (features[3] <= 34.5) {\r\n                        if (features[3] <= 31.5) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 11; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 67.0) {\r\n                            classes[0] = 8; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 6; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 2.5) {\r\n                        if (features[1] <= 77.5) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 13; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 35.849998474121094) {\r\n                    if (features[2] <= 33.400001525878906) {\r\n                        if (features[3] <= 33.5) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 24; \r\n                        } else {\r\n                            classes[0] = 24; \r\n                            classes[1] = 48; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 60.0) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 20; \r\n                            classes[1] = 28; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 47.5) {\r\n                        if (features[3] <= 34.5) {\r\n                            classes[0] = 5; \r\n                            classes[1] = 13; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 60; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 37.54999923706055) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 6; \r\n                            classes[1] = 4; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 30.299999237060547) {\r\n            if (features[0] <= 5.5) {\r\n                if (features[3] <= 30.5) {\r\n                    if (features[0] <= 1.5) {\r\n                        classes[0] = 48; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[0] <= 3.5) {\r\n                            classes[0] = 41; \r\n                            classes[1] = 9; \r\n                        } else {\r\n                            classes[0] = 20; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 35.0) {\r\n                        if (features[1] <= 69.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 8; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 73.0) {\r\n                            classes[0] = 13; \r\n                            classes[1] = 9; \r\n                        } else {\r\n                            classes[0] = 11; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[1] <= 87.0) {\r\n                    if (features[2] <= 29.75) {\r\n                        if (features[3] <= 53.5) {\r\n                            classes[0] = 9; \r\n                            classes[1] = 31; \r\n                        } else {\r\n                            classes[0] = 6; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 3; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[3] <= 51.5) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 1; \r\n                    } else {\r\n                        classes[0] = 3; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 34.5) {\r\n                if (features[2] <= 41.75) {\r\n                    if (features[2] <= 35.150001525878906) {\r\n                        if (features[0] <= 0.5) {\r\n                            classes[0] = 8; \r\n                            classes[1] = 20; \r\n                        } else {\r\n                            classes[0] = 36; \r\n                            classes[1] = 34; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 28.5) {\r\n                            classes[0] = 31; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 8; \r\n                            classes[1] = 9; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 31.5) {\r\n                        if (features[0] <= 0.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 15; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 12; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 43.19999694824219) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[1] <= 55.0) {\r\n                    classes[0] = 2; \r\n                    classes[1] = 0; \r\n                } else {\r\n                    if (features[2] <= 32.349998474121094) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 20; \r\n                    } else {\r\n                        if (features[3] <= 59.0) {\r\n                            classes[0] = 30; \r\n                            classes[1] = 97; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 28.5) {\r\n            if (features[2] <= 40.94999694824219) {\r\n                if (features[2] <= 27.450000762939453) {\r\n                    if (features[0] <= 2.5) {\r\n                        classes[0] = 52; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[2] <= 23.049999237060547) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 12; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 27.549999237060547) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 4; \r\n                    } else {\r\n                        if (features[2] <= 30.899999618530273) {\r\n                            classes[0] = 29; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 69; \r\n                            classes[1] = 33; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 22.5) {\r\n                    if (features[3] <= 21.5) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 1; \r\n                    } else {\r\n                        classes[0] = 2; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[2] <= 45.400001525878906) {\r\n                        if (features[1] <= 74.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 4; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 0.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 13; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 29.650001525878906) {\r\n                if (features[0] <= 5.5) {\r\n                    if (features[2] <= 26.899999618530273) {\r\n                        if (features[0] <= 1.5) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 11; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 35.0) {\r\n                            classes[0] = 8; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 6; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 87.0) {\r\n                        if (features[0] <= 6.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 9; \r\n                        } else {\r\n                            classes[0] = 15; \r\n                            classes[1] = 20; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 3; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 47.79999923706055) {\r\n                    if (features[2] <= 46.45000076293945) {\r\n                        if (features[2] <= 40.75) {\r\n                            classes[0] = 57; \r\n                            classes[1] = 139; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 22; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 9.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 0; \r\n                    classes[1] = 8; \r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[0] <= 4.5) {\r\n            if (features[3] <= 25.5) {\r\n                if (features[0] <= 0.5) {\r\n                    if (features[2] <= 34.54999923706055) {\r\n                        classes[0] = 17; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[2] <= 41.349998474121094) {\r\n                            classes[0] = 10; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 9; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 42.80000305175781) {\r\n                        if (features[3] <= 22.5) {\r\n                            classes[0] = 64; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 44; \r\n                            classes[1] = 13; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 93.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[1] <= 74.5) {\r\n                    if (features[3] <= 61.0) {\r\n                        if (features[0] <= 1.5) {\r\n                            classes[0] = 5; \r\n                            classes[1] = 27; \r\n                        } else {\r\n                            classes[0] = 28; \r\n                            classes[1] = 33; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 3; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[2] <= 28.200000762939453) {\r\n                        classes[0] = 9; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[3] <= 30.5) {\r\n                            classes[0] = 21; \r\n                            classes[1] = 13; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 22; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[1] <= 102.0) {\r\n                if (features[3] <= 59.5) {\r\n                    if (features[2] <= 37.45000076293945) {\r\n                        if (features[2] <= 36.349998474121094) {\r\n                            classes[0] = 47; \r\n                            classes[1] = 101; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 44.5) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 44; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 4; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 7; \r\n                    classes[1] = 0; \r\n                }\r\n            } else {\r\n                classes[0] = 0; \r\n                classes[1] = 12; \r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 27.299999237060547) {\r\n            if (features[0] <= 2.5) {\r\n                if (features[3] <= 30.5) {\r\n                    classes[0] = 53; \r\n                    classes[1] = 0; \r\n                } else {\r\n                    if (features[1] <= 71.0) {\r\n                        classes[0] = 1; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 1; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 42.5) {\r\n                    if (features[3] <= 33.0) {\r\n                        if (features[0] <= 6.5) {\r\n                            classes[0] = 19; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 8; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 17; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[1] <= 84.0) {\r\n                        if (features[0] <= 7.0) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 6; \r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[0] <= 6.5) {\r\n                if (features[2] <= 42.900001525878906) {\r\n                    if (features[3] <= 34.5) {\r\n                        if (features[1] <= 12.0) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 136; \r\n                            classes[1] = 64; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 36.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 11; \r\n                        } else {\r\n                            classes[0] = 28; \r\n                            classes[1] = 41; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 99.0) {\r\n                        if (features[1] <= 87.0) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 26; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 6; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 105.0) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[1] <= 69.0) {\r\n                    if (features[1] <= 61.0) {\r\n                        if (features[1] <= 58.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 19; \r\n                    }\r\n                } else {\r\n                    if (features[2] <= 27.799999237060547) {\r\n                        classes[0] = 1; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[2] <= 40.75) {\r\n                            classes[0] = 18; \r\n                            classes[1] = 49; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 17; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 26.5) {\r\n            if (features[0] <= 3.5) {\r\n                if (features[2] <= 30.450000762939453) {\r\n                    if (features[0] <= 2.5) {\r\n                        if (features[1] <= 69.0) {\r\n                            classes[0] = 51; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 14; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 24.350000381469727) {\r\n                            classes[0] = 6; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 37.0) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 6; \r\n                    } else {\r\n                        if (features[1] <= 85.0) {\r\n                            classes[0] = 45; \r\n                            classes[1] = 27; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 28.299999237060547) {\r\n                    classes[0] = 7; \r\n                    classes[1] = 0; \r\n                } else {\r\n                    if (features[1] <= 71.0) {\r\n                        if (features[1] <= 25.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 8; \r\n                            classes[1] = 5; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 41.54999923706055) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 9; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[1] <= 73.0) {\r\n                if (features[2] <= 27.0) {\r\n                    if (features[0] <= 2.5) {\r\n                        classes[0] = 10; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[2] <= 11.25) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 5; \r\n                            classes[1] = 6; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 30.700000762939453) {\r\n                        if (features[3] <= 61.0) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 41; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 34.5) {\r\n                            classes[0] = 17; \r\n                            classes[1] = 28; \r\n                        } else {\r\n                            classes[0] = 8; \r\n                            classes[1] = 46; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[1] <= 75.5) {\r\n                    if (features[2] <= 30.450000762939453) {\r\n                        if (features[3] <= 34.0) {\r\n                            classes[0] = 6; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 11.5) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 11; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 24.399999618530273) {\r\n                        if (features[0] <= 5.5) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 61.5) {\r\n                            classes[0] = 41; \r\n                            classes[1] = 111; \r\n                        } else {\r\n                            classes[0] = 9; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 30.5) {\r\n            if (features[2] <= 41.75) {\r\n                if (features[0] <= 2.5) {\r\n                    if (features[2] <= 26.5) {\r\n                        classes[0] = 49; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[3] <= 27.5) {\r\n                            classes[0] = 74; \r\n                            classes[1] = 20; \r\n                        } else {\r\n                            classes[0] = 8; \r\n                            classes[1] = 11; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 82.0) {\r\n                        if (features[2] <= 29.950000762939453) {\r\n                            classes[0] = 29; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 25; \r\n                            classes[1] = 23; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 35.099998474121094) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 9; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[0] <= 0.5) {\r\n                    classes[0] = 0; \r\n                    classes[1] = 11; \r\n                } else {\r\n                    if (features[2] <= 45.44999694824219) {\r\n                        if (features[2] <= 44.650001525878906) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 24.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 9; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 27.349998474121094) {\r\n                if (features[3] <= 38.0) {\r\n                    if (features[0] <= 8.5) {\r\n                        if (features[2] <= 24.0) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 6; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[2] <= 9.800000190734863) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 2; \r\n                    } else {\r\n                        if (features[2] <= 23.700000762939453) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 9; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 59.5) {\r\n                    if (features[3] <= 42.5) {\r\n                        if (features[2] <= 28.700000762939453) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 13; \r\n                        } else {\r\n                            classes[0] = 43; \r\n                            classes[1] = 78; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 52.5) {\r\n                            classes[0] = 13; \r\n                            classes[1] = 49; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 19; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 4.5) {\r\n                        if (features[0] <= 3.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 5; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 6; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[0] <= 5.5) {\r\n            if (features[2] <= 28.849998474121094) {\r\n                if (features[3] <= 49.5) {\r\n                    if (features[2] <= 25.5) {\r\n                        if (features[2] <= 22.75) {\r\n                            classes[0] = 29; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 26; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 12.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 36; \r\n                            classes[1] = 5; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 73.0) {\r\n                        if (features[0] <= 2.5) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 5; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 26.899999618530273) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 23.5) {\r\n                    if (features[2] <= 33.25) {\r\n                        if (features[2] <= 28.950000762939453) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 23; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 34.5) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 12; \r\n                            classes[1] = 5; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 93.0) {\r\n                        if (features[2] <= 45.5) {\r\n                            classes[0] = 99; \r\n                            classes[1] = 108; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 15; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 12; \r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[1] <= 63.0) {\r\n                if (features[1] <= 58.0) {\r\n                    if (features[3] <= 28.5) {\r\n                        classes[0] = 1; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[2] <= 29.150001525878906) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 11.0) {\r\n                        classes[0] = 4; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 1; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 59.5) {\r\n                    if (features[3] <= 28.5) {\r\n                        if (features[0] <= 7.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 27.25) {\r\n                            classes[0] = 9; \r\n                            classes[1] = 12; \r\n                        } else {\r\n                            classes[0] = 17; \r\n                            classes[1] = 117; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 4; \r\n                    classes[1] = 0; \r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 29.5) {\r\n            if (features[3] <= 21.5) {\r\n                if (features[2] <= 32.29999923706055) {\r\n                    classes[0] = 36; \r\n                    classes[1] = 0; \r\n                } else {\r\n                    if (features[1] <= 68.0) {\r\n                        if (features[2] <= 35.19999694824219) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 3; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 37.75) {\r\n                    if (features[0] <= 2.5) {\r\n                        if (features[2] <= 28.799999237060547) {\r\n                            classes[0] = 49; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 43; \r\n                            classes[1] = 15; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 4.5) {\r\n                            classes[0] = 26; \r\n                            classes[1] = 30; \r\n                        } else {\r\n                            classes[0] = 21; \r\n                            classes[1] = 4; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 57.0) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 8; \r\n                    } else {\r\n                        if (features[1] <= 83.0) {\r\n                            classes[0] = 12; \r\n                            classes[1] = 9; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 12; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 27.849998474121094) {\r\n                if (features[3] <= 61.0) {\r\n                    if (features[2] <= 9.800000190734863) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 2; \r\n                    } else {\r\n                        if (features[2] <= 23.349998474121094) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 18; \r\n                            classes[1] = 26; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 7; \r\n                    classes[1] = 0; \r\n                }\r\n            } else {\r\n                if (features[0] <= 1.5) {\r\n                    if (features[1] <= 35.0) {\r\n                        if (features[2] <= 33.04999923706055) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 30.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 35; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 4.5) {\r\n                        if (features[1] <= 69.0) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 16; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 42.5) {\r\n                            classes[0] = 27; \r\n                            classes[1] = 55; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 53; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 28.5) {\r\n            if (features[2] <= 29.899999618530273) {\r\n                if (features[3] <= 27.5) {\r\n                    if (features[3] <= 23.5) {\r\n                        if (features[2] <= 28.799999237060547) {\r\n                            classes[0] = 53; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 29; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[1] <= 68.0) {\r\n                        if (features[1] <= 61.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 3; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[0] <= 0.5) {\r\n                    if (features[1] <= 63.0) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 6; \r\n                    } else {\r\n                        if (features[3] <= 21.5) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 23; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 40.29999923706055) {\r\n                        if (features[1] <= 22.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 65; \r\n                            classes[1] = 24; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 77.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 62.5) {\r\n                if (features[1] <= 59.0) {\r\n                    if (features[0] <= 7.5) {\r\n                        if (features[2] <= 41.349998474121094) {\r\n                            classes[0] = 12; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 34.29999923706055) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 6.5) {\r\n                        if (features[3] <= 48.5) {\r\n                            classes[0] = 53; \r\n                            classes[1] = 67; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 20; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 40.75) {\r\n                            classes[0] = 32; \r\n                            classes[1] = 85; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 19; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 69.5) {\r\n                    classes[0] = 10; \r\n                    classes[1] = 0; \r\n                } else {\r\n                    if (features[1] <= 78.0) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 1; \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 27.849998474121094) {\r\n            if (features[0] <= 5.5) {\r\n                if (features[2] <= 23.349998474121094) {\r\n                    classes[0] = 34; \r\n                    classes[1] = 0; \r\n                } else {\r\n                    if (features[2] <= 23.450000762939453) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 4; \r\n                    } else {\r\n                        if (features[1] <= 71.0) {\r\n                            classes[0] = 34; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 11; \r\n                            classes[1] = 4; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[1] <= 66.0) {\r\n                    if (features[1] <= 52.5) {\r\n                        if (features[2] <= 13.550000190734863) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 57.5) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 6; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 56.0) {\r\n                        if (features[3] <= 49.5) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 4; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 11; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 25.5) {\r\n                if (features[1] <= 49.0) {\r\n                    if (features[2] <= 30.80000114440918) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[0] <= 4.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 9; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 21.5) {\r\n                        if (features[1] <= 62.0) {\r\n                            classes[0] = 5; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 12; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 34.150001525878906) {\r\n                            classes[0] = 31; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 15; \r\n                            classes[1] = 26; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 34.5) {\r\n                    if (features[1] <= 61.0) {\r\n                        if (features[3] <= 26.5) {\r\n                            classes[0] = 5; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 11; \r\n                            classes[1] = 11; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 6.5) {\r\n                            classes[0] = 42; \r\n                            classes[1] = 62; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 17; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 59.0) {\r\n                        if (features[3] <= 39.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 62.5) {\r\n                            classes[0] = 32; \r\n                            classes[1] = 140; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 27.5) {\r\n            if (features[2] <= 41.75) {\r\n                if (features[0] <= 2.5) {\r\n                    if (features[3] <= 22.5) {\r\n                        if (features[3] <= 21.5) {\r\n                            classes[0] = 36; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 30; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 31.400001525878906) {\r\n                            classes[0] = 34; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 22; \r\n                            classes[1] = 11; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 7.5) {\r\n                        if (features[2] <= 34.54999923706055) {\r\n                            classes[0] = 34; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 5; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 1; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 50.79999923706055) {\r\n                    if (features[2] <= 44.69999694824219) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 12; \r\n                    } else {\r\n                        if (features[0] <= 0.5) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 6; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 53.650001525878906) {\r\n                        classes[0] = 3; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 4; \r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 27.0) {\r\n                if (features[0] <= 5.5) {\r\n                    classes[0] = 17; \r\n                    classes[1] = 0; \r\n                } else {\r\n                    if (features[3] <= 42.5) {\r\n                        if (features[3] <= 33.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 70.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 4; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 62.5) {\r\n                    if (features[3] <= 42.5) {\r\n                        if (features[2] <= 28.450000762939453) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 20; \r\n                        } else {\r\n                            classes[0] = 72; \r\n                            classes[1] = 111; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 35.5) {\r\n                            classes[0] = 12; \r\n                            classes[1] = 30; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 37; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 4.5) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 2; \r\n                    } else {\r\n                        classes[0] = 7; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 29.650001525878906) {\r\n            if (features[0] <= 5.5) {\r\n                if (features[2] <= 22.75) {\r\n                    classes[0] = 25; \r\n                    classes[1] = 0; \r\n                } else {\r\n                    if (features[3] <= 32.5) {\r\n                        if (features[0] <= 2.5) {\r\n                            classes[0] = 61; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 22; \r\n                            classes[1] = 5; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 33.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 4; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 31.5) {\r\n                    if (features[0] <= 6.5) {\r\n                        classes[0] = 1; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[1] <= 68.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 8; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 26.649999618530273) {\r\n                        if (features[0] <= 6.5) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 16; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 27.700000762939453) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 40.75) {\r\n                if (features[3] <= 26.5) {\r\n                    if (features[1] <= 54.0) {\r\n                        if (features[3] <= 22.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 11; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 22.5) {\r\n                            classes[0] = 26; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 46; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 31.75) {\r\n                        if (features[0] <= 10.0) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 42; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 40.0) {\r\n                            classes[0] = 60; \r\n                            classes[1] = 99; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 41.099998474121094) {\r\n                    classes[0] = 0; \r\n                    classes[1] = 6; \r\n                } else {\r\n                    if (features[2] <= 41.650001525878906) {\r\n                        if (features[1] <= 74.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 6.0) {\r\n                            classes[0] = 9; \r\n                            classes[1] = 34; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 11; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 28.5) {\r\n            if (features[3] <= 22.5) {\r\n                if (features[1] <= 75.5) {\r\n                    if (features[0] <= 0.5) {\r\n                        if (features[1] <= 67.0) {\r\n                            classes[0] = 6; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 5; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 21.5) {\r\n                            classes[0] = 22; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 25; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 27.950000762939453) {\r\n                        classes[0] = 7; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[0] <= 3.5) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 42.349998474121094) {\r\n                    if (features[1] <= 53.0) {\r\n                        if (features[3] <= 26.5) {\r\n                            classes[0] = 8; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 6; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 2.5) {\r\n                            classes[0] = 68; \r\n                            classes[1] = 12; \r\n                        } else {\r\n                            classes[0] = 32; \r\n                            classes[1] = 13; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 87.0) {\r\n                        if (features[2] <= 45.400001525878906) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 12; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 26.5) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 56.0) {\r\n                if (features[2] <= 30.25) {\r\n                    if (features[1] <= 59.0) {\r\n                        if (features[0] <= 5.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 5; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 71.0) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 19; \r\n                        } else {\r\n                            classes[0] = 25; \r\n                            classes[1] = 17; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 34.5) {\r\n                        if (features[2] <= 31.549999237060547) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 22; \r\n                            classes[1] = 20; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 33.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 41; \r\n                        } else {\r\n                            classes[0] = 29; \r\n                            classes[1] = 75; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[1] <= 89.0) {\r\n                    if (features[0] <= 1.5) {\r\n                        if (features[1] <= 57.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 34.95000076293945) {\r\n                            classes[0] = 17; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 25.400001525878906) {\r\n                        classes[0] = 1; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 2; \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 29.650001525878906) {\r\n            if (features[3] <= 28.5) {\r\n                if (features[0] <= 1.5) {\r\n                    classes[0] = 47; \r\n                    classes[1] = 0; \r\n                } else {\r\n                    if (features[3] <= 26.5) {\r\n                        if (features[0] <= 2.5) {\r\n                            classes[0] = 20; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 13; \r\n                            classes[1] = 4; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 2.5) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 6; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 29.399999618530273) {\r\n                    if (features[3] <= 60.5) {\r\n                        if (features[3] <= 48.5) {\r\n                            classes[0] = 25; \r\n                            classes[1] = 30; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 17; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 10; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    classes[0] = 6; \r\n                    classes[1] = 0; \r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 42.5) {\r\n                if (features[0] <= 0.5) {\r\n                    if (features[3] <= 29.5) {\r\n                        if (features[2] <= 36.44999694824219) {\r\n                            classes[0] = 9; \r\n                            classes[1] = 12; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 20; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 12; \r\n                    }\r\n                } else {\r\n                    if (features[0] <= 2.5) {\r\n                        if (features[3] <= 26.5) {\r\n                            classes[0] = 32; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 14; \r\n                            classes[1] = 17; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 84.5) {\r\n                            classes[0] = 51; \r\n                            classes[1] = 82; \r\n                        } else {\r\n                            classes[0] = 15; \r\n                            classes[1] = 6; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 34.650001525878906) {\r\n                    if (features[2] <= 34.0) {\r\n                        if (features[3] <= 61.0) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 23; \r\n                        } else {\r\n                            classes[0] = 5; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 6; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[1] <= 77.0) {\r\n                        if (features[3] <= 46.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 6; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 23; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 46.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 11; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 9; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 30.5) {\r\n            if (features[0] <= 2.5) {\r\n                if (features[0] <= 0.5) {\r\n                    if (features[2] <= 31.600000381469727) {\r\n                        if (features[2] <= 29.899999618530273) {\r\n                            classes[0] = 15; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 41.75) {\r\n                            classes[0] = 9; \r\n                            classes[1] = 13; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 13; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 25.5) {\r\n                        if (features[3] <= 21.5) {\r\n                            classes[0] = 23; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 55; \r\n                            classes[1] = 8; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 69.0) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 13; \r\n                        } else {\r\n                            classes[0] = 14; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[0] <= 7.5) {\r\n                    if (features[0] <= 5.5) {\r\n                        if (features[2] <= 29.600000381469727) {\r\n                            classes[0] = 20; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 33; \r\n                            classes[1] = 41; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 7; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    classes[0] = 0; \r\n                    classes[1] = 4; \r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 59.5) {\r\n                if (features[2] <= 29.650001525878906) {\r\n                    if (features[3] <= 41.5) {\r\n                        if (features[2] <= 25.700000762939453) {\r\n                            classes[0] = 10; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 18; \r\n                            classes[1] = 9; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 70.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 6; \r\n                        } else {\r\n                            classes[0] = 14; \r\n                            classes[1] = 12; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 43.5) {\r\n                        if (features[1] <= 89.0) {\r\n                            classes[0] = 43; \r\n                            classes[1] = 73; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 17; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 52.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 24; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 16; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[0] <= 4.5) {\r\n                    if (features[2] <= 32.45000076293945) {\r\n                        if (features[0] <= 1.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 2; \r\n                    }\r\n                } else {\r\n                    classes[0] = 10; \r\n                    classes[1] = 0; \r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 28.849998474121094) {\r\n            if (features[0] <= 5.5) {\r\n                if (features[3] <= 27.5) {\r\n                    if (features[1] <= 55.0) {\r\n                        if (features[2] <= 25.150001525878906) {\r\n                            classes[0] = 15; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 6; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 2.5) {\r\n                            classes[0] = 59; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 15; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 25.0) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 1; \r\n                    } else {\r\n                        if (features[0] <= 3.5) {\r\n                            classes[0] = 17; \r\n                            classes[1] = 6; \r\n                        } else {\r\n                            classes[0] = 13; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 27.25) {\r\n                    if (features[3] <= 30.5) {\r\n                        if (features[3] <= 28.5) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 5; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 85.0) {\r\n                            classes[0] = 21; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 27.0) {\r\n                        classes[0] = 1; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[3] <= 58.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 11; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[0] <= 4.5) {\r\n                if (features[2] <= 45.400001525878906) {\r\n                    if (features[3] <= 25.5) {\r\n                        if (features[0] <= 0.5) {\r\n                            classes[0] = 13; \r\n                            classes[1] = 16; \r\n                        } else {\r\n                            classes[0] = 46; \r\n                            classes[1] = 8; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 15.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 42; \r\n                            classes[1] = 71; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 97.0) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 17; \r\n                    } else {\r\n                        if (features[2] <= 62.19999694824219) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[1] <= 69.0) {\r\n                    if (features[3] <= 24.5) {\r\n                        classes[0] = 2; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[2] <= 29.899999618530273) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 30; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 40.75) {\r\n                        if (features[3] <= 60.5) {\r\n                            classes[0] = 28; \r\n                            classes[1] = 62; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 46.45000076293945) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 13; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 5; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 26.5) {\r\n            if (features[2] <= 30.950000762939453) {\r\n                if (features[0] <= 7.5) {\r\n                    if (features[0] <= 2.5) {\r\n                        classes[0] = 61; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[2] <= 25.799999237060547) {\r\n                            classes[0] = 8; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 14; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 0; \r\n                    classes[1] = 1; \r\n                }\r\n            } else {\r\n                if (features[1] <= 81.0) {\r\n                    if (features[2] <= 39.95000076293945) {\r\n                        if (features[1] <= 59.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 43; \r\n                            classes[1] = 15; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 1.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 44.69999694824219) {\r\n                        if (features[1] <= 83.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 9; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 87.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[0] <= 6.5) {\r\n                if (features[2] <= 26.899999618530273) {\r\n                    if (features[2] <= 23.349998474121094) {\r\n                        classes[0] = 7; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[1] <= 70.0) {\r\n                            classes[0] = 9; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 8; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 51.0) {\r\n                        if (features[3] <= 40.0) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 24; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 59.0) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 63; \r\n                            classes[1] = 128; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 26.25) {\r\n                    if (features[1] <= 83.0) {\r\n                        if (features[1] <= 71.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 9.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 94.5) {\r\n                        if (features[3] <= 60.5) {\r\n                            classes[0] = 17; \r\n                            classes[1] = 103; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 42.20000076293945) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 28.5) {\r\n            if (features[2] <= 29.950000762939453) {\r\n                if (features[0] <= 7.0) {\r\n                    if (features[3] <= 27.5) {\r\n                        if (features[2] <= 28.799999237060547) {\r\n                            classes[0] = 79; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 11; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 3.5) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 0; \r\n                    classes[1] = 4; \r\n                }\r\n            } else {\r\n                if (features[2] <= 41.75) {\r\n                    if (features[0] <= 2.5) {\r\n                        if (features[1] <= 71.0) {\r\n                            classes[0] = 22; \r\n                            classes[1] = 20; \r\n                        } else {\r\n                            classes[0] = 25; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 36.94999694824219) {\r\n                            classes[0] = 8; \r\n                            classes[1] = 22; \r\n                        } else {\r\n                            classes[0] = 5; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 24.5) {\r\n                        if (features[2] <= 44.69999694824219) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 6; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 44.44999694824219) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 11; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 8; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[0] <= 6.5) {\r\n                if (features[3] <= 48.5) {\r\n                    if (features[3] <= 43.5) {\r\n                        if (features[1] <= 15.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 6; \r\n                        } else {\r\n                            classes[0] = 49; \r\n                            classes[1] = 79; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 12; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[2] <= 23.399999618530273) {\r\n                        classes[0] = 2; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[3] <= 61.5) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 26; \r\n                        } else {\r\n                            classes[0] = 5; \r\n                            classes[1] = 8; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 42.5) {\r\n                    if (features[2] <= 44.55000305175781) {\r\n                        if (features[3] <= 33.5) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 30; \r\n                        } else {\r\n                            classes[0] = 15; \r\n                            classes[1] = 24; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 83.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 59.5) {\r\n                        if (features[3] <= 45.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 27; \r\n                        } else {\r\n                            classes[0] = 5; \r\n                            classes[1] = 38; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 1; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 30.5) {\r\n            if (features[0] <= 0.5) {\r\n                if (features[2] <= 31.600000381469727) {\r\n                    if (features[2] <= 29.600000381469727) {\r\n                        classes[0] = 14; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[2] <= 30.649999618530273) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 24.5) {\r\n                        if (features[2] <= 44.69999694824219) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 12; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 25.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 8; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[0] <= 2.5) {\r\n                    if (features[2] <= 42.25) {\r\n                        if (features[3] <= 26.5) {\r\n                            classes[0] = 94; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 20; \r\n                            classes[1] = 11; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 6; \r\n                    }\r\n                } else {\r\n                    if (features[2] <= 26.200000762939453) {\r\n                        classes[0] = 22; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[0] <= 6.5) {\r\n                            classes[0] = 38; \r\n                            classes[1] = 33; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 23.200000762939453) {\r\n                if (features[1] <= 93.0) {\r\n                    classes[0] = 8; \r\n                    classes[1] = 0; \r\n                } else {\r\n                    classes[0] = 0; \r\n                    classes[1] = 1; \r\n                }\r\n            } else {\r\n                if (features[3] <= 59.5) {\r\n                    if (features[1] <= 71.0) {\r\n                        if (features[2] <= 33.54999923706055) {\r\n                            classes[0] = 16; \r\n                            classes[1] = 38; \r\n                        } else {\r\n                            classes[0] = 11; \r\n                            classes[1] = 9; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 30.149999618530273) {\r\n                            classes[0] = 18; \r\n                            classes[1] = 33; \r\n                        } else {\r\n                            classes[0] = 24; \r\n                            classes[1] = 101; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 69.5) {\r\n                        if (features[0] <= 4.5) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 6; \r\n                        } else {\r\n                            classes[0] = 9; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 2; \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 27.5) {\r\n            if (features[2] <= 31.400001525878906) {\r\n                if (features[2] <= 25.5) {\r\n                    classes[0] = 56; \r\n                    classes[1] = 0; \r\n                } else {\r\n                    if (features[1] <= 85.0) {\r\n                        if (features[0] <= 1.5) {\r\n                            classes[0] = 20; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 23; \r\n                            classes[1] = 6; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 5.5) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 41.79999923706055) {\r\n                    if (features[1] <= 54.0) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 9; \r\n                    } else {\r\n                        if (features[2] <= 38.349998474121094) {\r\n                            classes[0] = 33; \r\n                            classes[1] = 20; \r\n                        } else {\r\n                            classes[0] = 17; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 1.5) {\r\n                        if (features[3] <= 22.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 11; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 3.5) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 26.5) {\r\n                if (features[3] <= 46.5) {\r\n                    if (features[1] <= 64.5) {\r\n                        if (features[2] <= 23.5) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 18; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[2] <= 23.399999618530273) {\r\n                        classes[0] = 5; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[1] <= 76.0) {\r\n                            classes[0] = 5; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 6; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 42.5) {\r\n                    if (features[0] <= 10.5) {\r\n                        if (features[1] <= 67.0) {\r\n                            classes[0] = 9; \r\n                            classes[1] = 44; \r\n                        } else {\r\n                            classes[0] = 54; \r\n                            classes[1] = 103; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 41.19999694824219) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 62.5) {\r\n                        if (features[3] <= 51.5) {\r\n                            classes[0] = 9; \r\n                            classes[1] = 44; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 35; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 4.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 28.5) {\r\n            if (features[2] <= 41.79999923706055) {\r\n                if (features[1] <= 55.0) {\r\n                    if (features[2] <= 25.400001525878906) {\r\n                        classes[0] = 13; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[1] <= 12.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 9; \r\n                        } else {\r\n                            classes[0] = 9; \r\n                            classes[1] = 9; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 30.350000381469727) {\r\n                        if (features[0] <= 7.0) {\r\n                            classes[0] = 84; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 74.5) {\r\n                            classes[0] = 49; \r\n                            classes[1] = 33; \r\n                        } else {\r\n                            classes[0] = 23; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 23.5) {\r\n                    if (features[1] <= 95.0) {\r\n                        if (features[2] <= 48.900001525878906) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 6; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    classes[0] = 0; \r\n                    classes[1] = 20; \r\n                }\r\n            }\r\n        } else {\r\n            if (features[0] <= 12.5) {\r\n                if (features[2] <= 23.349998474121094) {\r\n                    classes[0] = 12; \r\n                    classes[1] = 0; \r\n                } else {\r\n                    if (features[3] <= 39.5) {\r\n                        if (features[0] <= 9.5) {\r\n                            classes[0] = 46; \r\n                            classes[1] = 73; \r\n                        } else {\r\n                            classes[0] = 8; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 59.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 40; \r\n                            classes[1] = 103; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 44.5) {\r\n                    classes[0] = 0; \r\n                    classes[1] = 11; \r\n                } else {\r\n                    if (features[2] <= 38.75) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 4; \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 30.5) {\r\n            if (features[0] <= 0.5) {\r\n                if (features[1] <= 51.0) {\r\n                    classes[0] = 0; \r\n                    classes[1] = 9; \r\n                } else {\r\n                    if (features[2] <= 31.5) {\r\n                        classes[0] = 16; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[3] <= 21.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 9; \r\n                        } else {\r\n                            classes[0] = 14; \r\n                            classes[1] = 23; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[1] <= 79.0) {\r\n                    if (features[2] <= 42.80000305175781) {\r\n                        if (features[0] <= 2.5) {\r\n                            classes[0] = 98; \r\n                            classes[1] = 16; \r\n                        } else {\r\n                            classes[0] = 48; \r\n                            classes[1] = 24; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 6; \r\n                    }\r\n                } else {\r\n                    if (features[2] <= 28.700000762939453) {\r\n                        classes[0] = 11; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[1] <= 81.0) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 11; \r\n                        } else {\r\n                            classes[0] = 9; \r\n                            classes[1] = 8; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 59.5) {\r\n                if (features[2] <= 27.549999237060547) {\r\n                    if (features[3] <= 45.5) {\r\n                        if (features[2] <= 23.950000762939453) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 9; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 55.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 9; \r\n                        } else {\r\n                            classes[0] = 5; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 67.0) {\r\n                        if (features[2] <= 33.69999694824219) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 24; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 6; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 40.5) {\r\n                            classes[0] = 24; \r\n                            classes[1] = 46; \r\n                        } else {\r\n                            classes[0] = 21; \r\n                            classes[1] = 78; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[0] <= 4.5) {\r\n                    if (features[1] <= 65.0) {\r\n                        classes[0] = 3; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[2] <= 32.45000076293945) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 6; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 10; \r\n                    classes[1] = 0; \r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 26.5) {\r\n            if (features[2] <= 30.450000762939453) {\r\n                if (features[2] <= 22.950000762939453) {\r\n                    if (features[0] <= 2.5) {\r\n                        classes[0] = 18; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[2] <= 22.75) {\r\n                            classes[0] = 10; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 76; \r\n                    classes[1] = 0; \r\n                }\r\n            } else {\r\n                if (features[2] <= 43.0) {\r\n                    if (features[1] <= 53.0) {\r\n                        if (features[2] <= 34.849998474121094) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 0.5) {\r\n                            classes[0] = 8; \r\n                            classes[1] = 6; \r\n                        } else {\r\n                            classes[0] = 43; \r\n                            classes[1] = 15; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 87.0) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 9; \r\n                    } else {\r\n                        if (features[0] <= 0.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 67.5) {\r\n                if (features[1] <= 45.0) {\r\n                    if (features[2] <= 33.79999923706055) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 15; \r\n                    } else {\r\n                        if (features[3] <= 30.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 8; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 59.0) {\r\n                        if (features[1] <= 51.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 26.299999237060547) {\r\n                            classes[0] = 23; \r\n                            classes[1] = 11; \r\n                        } else {\r\n                            classes[0] = 92; \r\n                            classes[1] = 186; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[0] <= 4.5) {\r\n                    if (features[3] <= 71.0) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 1; \r\n                    } else {\r\n                        classes[0] = 2; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    classes[0] = 5; \r\n                    classes[1] = 0; \r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 24.5) {\r\n            if (features[1] <= 71.0) {\r\n                if (features[0] <= 0.5) {\r\n                    if (features[2] <= 42.04999923706055) {\r\n                        if (features[2] <= 36.79999923706055) {\r\n                            classes[0] = 11; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 1; \r\n                    }\r\n                } else {\r\n                    if (features[3] <= 23.5) {\r\n                        classes[0] = 48; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[2] <= 39.04999923706055) {\r\n                            classes[0] = 19; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 31.600000381469727) {\r\n                    classes[0] = 14; \r\n                    classes[1] = 0; \r\n                } else {\r\n                    if (features[0] <= 1.5) {\r\n                        if (features[1] <= 81.0) {\r\n                            classes[0] = 12; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 4; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 93.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 26.299999237060547) {\r\n                if (features[3] <= 46.5) {\r\n                    if (features[1] <= 65.0) {\r\n                        if (features[3] <= 31.5) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 27; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[2] <= 23.700000762939453) {\r\n                        if (features[1] <= 89.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 25.849998474121094) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 40.75) {\r\n                    if (features[3] <= 26.5) {\r\n                        if (features[3] <= 25.5) {\r\n                            classes[0] = 14; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 8; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 85.5) {\r\n                            classes[0] = 91; \r\n                            classes[1] = 175; \r\n                        } else {\r\n                            classes[0] = 21; \r\n                            classes[1] = 4; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 46.5) {\r\n                        if (features[2] <= 46.150001525878906) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 34; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 17; \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 26.5) {\r\n            if (features[2] <= 42.69999694824219) {\r\n                if (features[0] <= 2.5) {\r\n                    if (features[2] <= 30.450000762939453) {\r\n                        classes[0] = 70; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[2] <= 30.600000381469727) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 47; \r\n                            classes[1] = 8; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 67.5) {\r\n                        if (features[1] <= 53.0) {\r\n                            classes[0] = 10; \r\n                            classes[1] = 6; \r\n                        } else {\r\n                            classes[0] = 18; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 83.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 47.44999694824219) {\r\n                    if (features[2] <= 44.650001525878906) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 6; \r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    classes[0] = 0; \r\n                    classes[1] = 8; \r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 26.299999237060547) {\r\n                if (features[3] <= 46.0) {\r\n                    if (features[0] <= 1.5) {\r\n                        if (features[3] <= 30.0) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 24; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[3] <= 59.5) {\r\n                        if (features[2] <= 25.899999618530273) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 11; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 6; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 62.5) {\r\n                    if (features[0] <= 5.5) {\r\n                        if (features[1] <= 81.0) {\r\n                            classes[0] = 47; \r\n                            classes[1] = 99; \r\n                        } else {\r\n                            classes[0] = 20; \r\n                            classes[1] = 12; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 45.80000305175781) {\r\n                            classes[0] = 26; \r\n                            classes[1] = 114; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 69.5) {\r\n                        classes[0] = 7; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 1; \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 28.849998474121094) {\r\n            if (features[0] <= 5.5) {\r\n                if (features[0] <= 2.5) {\r\n                    if (features[3] <= 26.5) {\r\n                        classes[0] = 65; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[0] <= 1.5) {\r\n                            classes[0] = 8; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 64.5) {\r\n                        if (features[2] <= 22.75) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 5; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 4.5) {\r\n                            classes[0] = 11; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 6; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 56.0) {\r\n                    if (features[2] <= 26.25) {\r\n                        if (features[2] <= 24.149999618530273) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 6; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 52.0) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 12; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 7; \r\n                    classes[1] = 0; \r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 28.5) {\r\n                if (features[0] <= 0.5) {\r\n                    if (features[3] <= 24.5) {\r\n                        if (features[1] <= 62.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 13; \r\n                            classes[1] = 8; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 41.75) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 9; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 12; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 45.400001525878906) {\r\n                        if (features[1] <= 22.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 70; \r\n                            classes[1] = 27; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 22.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 6; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 42.5) {\r\n                    if (features[3] <= 36.5) {\r\n                        if (features[3] <= 34.5) {\r\n                            classes[0] = 22; \r\n                            classes[1] = 46; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 24; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 4.5) {\r\n                            classes[0] = 10; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 14; \r\n                            classes[1] = 20; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 0.5) {\r\n                        if (features[1] <= 36.0) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 44.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 22; \r\n                        } else {\r\n                            classes[0] = 15; \r\n                            classes[1] = 64; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 25.450000762939453) {\r\n            if (features[3] <= 31.0) {\r\n                if (features[2] <= 23.0) {\r\n                    if (features[2] <= 22.75) {\r\n                        classes[0] = 25; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 1; \r\n                    }\r\n                } else {\r\n                    classes[0] = 38; \r\n                    classes[1] = 0; \r\n                }\r\n            } else {\r\n                if (features[3] <= 33.5) {\r\n                    if (features[2] <= 22.899999618530273) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 6; \r\n                    }\r\n                } else {\r\n                    if (features[1] <= 84.0) {\r\n                        if (features[0] <= 6.5) {\r\n                            classes[0] = 8; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 9; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 43.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 5; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 41.650001525878906) {\r\n                if (features[1] <= 22.0) {\r\n                    if (features[2] <= 37.400001525878906) {\r\n                        if (features[2] <= 33.349998474121094) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 12; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 1; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[2] <= 28.849998474121094) {\r\n                        if (features[0] <= 7.5) {\r\n                            classes[0] = 41; \r\n                            classes[1] = 16; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 12; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 28.5) {\r\n                            classes[0] = 88; \r\n                            classes[1] = 39; \r\n                        } else {\r\n                            classes[0] = 56; \r\n                            classes[1] = 129; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 22.5) {\r\n                    if (features[1] <= 95.0) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 1; \r\n                    } else {\r\n                        classes[0] = 3; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[1] <= 35.0) {\r\n                        classes[0] = 1; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[2] <= 47.79999923706055) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 31; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 19; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 26.75) {\r\n            if (features[3] <= 29.5) {\r\n                if (features[2] <= 26.5) {\r\n                    if (features[2] <= 25.5) {\r\n                        classes[0] = 58; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[1] <= 56.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 9; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 25.5) {\r\n                        classes[0] = 1; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 1; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 61.0) {\r\n                    if (features[2] <= 11.25) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 4; \r\n                    } else {\r\n                        if (features[1] <= 63.0) {\r\n                            classes[0] = 5; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 11; \r\n                            classes[1] = 15; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 8; \r\n                    classes[1] = 0; \r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 29.5) {\r\n                if (features[1] <= 12.0) {\r\n                    if (features[2] <= 33.849998474121094) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 4; \r\n                    } else {\r\n                        if (features[0] <= 5.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 41.79999923706055) {\r\n                        if (features[3] <= 27.5) {\r\n                            classes[0] = 93; \r\n                            classes[1] = 31; \r\n                        } else {\r\n                            classes[0] = 21; \r\n                            classes[1] = 20; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 2.5) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 27; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 4; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[1] <= 96.5) {\r\n                    if (features[2] <= 27.849998474121094) {\r\n                        if (features[3] <= 53.0) {\r\n                            classes[0] = 8; \r\n                            classes[1] = 15; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 61.0) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 41; \r\n                            classes[1] = 146; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 30.25) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[2] <= 40.650001525878906) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 6; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 9; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 28.5) {\r\n            if (features[0] <= 2.5) {\r\n                if (features[3] <= 22.5) {\r\n                    if (features[3] <= 21.5) {\r\n                        if (features[2] <= 33.400001525878906) {\r\n                            classes[0] = 25; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 27; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[1] <= 51.0) {\r\n                        if (features[2] <= 25.299999237060547) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 12; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 41.95000076293945) {\r\n                            classes[0] = 72; \r\n                            classes[1] = 13; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 15; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[1] <= 69.0) {\r\n                    if (features[3] <= 27.5) {\r\n                        if (features[1] <= 53.0) {\r\n                            classes[0] = 6; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 20; \r\n                            classes[1] = 4; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 3.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 87.0) {\r\n                        if (features[1] <= 78.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 9; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 12; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 95.0) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 29.650001525878906) {\r\n                if (features[2] <= 23.349998474121094) {\r\n                    if (features[2] <= 9.800000190734863) {\r\n                        if (features[3] <= 61.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 9; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[3] <= 60.5) {\r\n                        if (features[1] <= 60.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 29; \r\n                            classes[1] = 45; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 7; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 34.25) {\r\n                    if (features[0] <= 3.5) {\r\n                        if (features[1] <= 62.0) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 6; \r\n                        } else {\r\n                            classes[0] = 12; \r\n                            classes[1] = 8; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 62.0) {\r\n                            classes[0] = 13; \r\n                            classes[1] = 44; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 35.0) {\r\n                        if (features[2] <= 43.75) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 77.0) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 55; \r\n                        } else {\r\n                            classes[0] = 18; \r\n                            classes[1] = 48; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[0] <= 3.5) {\r\n            if (features[0] <= 0.5) {\r\n                if (features[3] <= 23.5) {\r\n                    if (features[1] <= 75.5) {\r\n                        if (features[1] <= 51.0) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 14; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 78.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 28.5) {\r\n                        if (features[2] <= 40.599998474121094) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 17; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 80.0) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 23.5) {\r\n                    if (features[2] <= 42.80000305175781) {\r\n                        if (features[1] <= 83.0) {\r\n                            classes[0] = 65; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 1; \r\n                    }\r\n                } else {\r\n                    if (features[3] <= 27.5) {\r\n                        if (features[0] <= 2.5) {\r\n                            classes[0] = 39; \r\n                            classes[1] = 11; \r\n                        } else {\r\n                            classes[0] = 14; \r\n                            classes[1] = 15; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 1.5) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 26; \r\n                        } else {\r\n                            classes[0] = 20; \r\n                            classes[1] = 15; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 27.049999237060547) {\r\n                if (features[1] <= 94.0) {\r\n                    if (features[2] <= 24.349998474121094) {\r\n                        if (features[1] <= 80.0) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 6; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 85.0) {\r\n                            classes[0] = 19; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 12.0) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 2; \r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 30.5) {\r\n                    if (features[1] <= 69.0) {\r\n                        if (features[2] <= 35.599998474121094) {\r\n                            classes[0] = 19; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 93.0) {\r\n                            classes[0] = 10; \r\n                            classes[1] = 9; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 77.0) {\r\n                        if (features[2] <= 36.0) {\r\n                            classes[0] = 18; \r\n                            classes[1] = 53; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 24; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 9.5) {\r\n                            classes[0] = 21; \r\n                            classes[1] = 59; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 5; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[0] <= 6.5) {\r\n            if (features[2] <= 26.299999237060547) {\r\n                if (features[3] <= 45.5) {\r\n                    if (features[0] <= 2.5) {\r\n                        if (features[3] <= 31.0) {\r\n                            classes[0] = 44; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 24.5) {\r\n                            classes[0] = 10; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 14; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 23.549999237060547) {\r\n                        classes[0] = 6; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 4; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 41.75) {\r\n                    if (features[3] <= 32.5) {\r\n                        if (features[1] <= 85.0) {\r\n                            classes[0] = 122; \r\n                            classes[1] = 63; \r\n                        } else {\r\n                            classes[0] = 12; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 29.399999618530273) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 20; \r\n                        } else {\r\n                            classes[0] = 25; \r\n                            classes[1] = 41; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 57.0) {\r\n                        classes[0] = 2; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[0] <= 1.5) {\r\n                            classes[0] = 5; \r\n                            classes[1] = 19; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 13; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 24.700000762939453) {\r\n                classes[0] = 8; \r\n                classes[1] = 0; \r\n            } else {\r\n                if (features[2] <= 35.75) {\r\n                    if (features[2] <= 35.25) {\r\n                        if (features[1] <= 85.0) {\r\n                            classes[0] = 25; \r\n                            classes[1] = 42; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 15; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 4; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[0] <= 9.5) {\r\n                        if (features[2] <= 45.349998474121094) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 37; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 50.5) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 13; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 27.849998474121094) {\r\n            if (features[3] <= 27.5) {\r\n                if (features[0] <= 2.5) {\r\n                    classes[0] = 58; \r\n                    classes[1] = 0; \r\n                } else {\r\n                    if (features[3] <= 23.5) {\r\n                        if (features[1] <= 63.0) {\r\n                            classes[0] = 5; \r\n                            classes[1] = 6; \r\n                        } else {\r\n                            classes[0] = 6; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 10; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 23.200000762939453) {\r\n                    if (features[0] <= 9.0) {\r\n                        classes[0] = 12; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 1; \r\n                    }\r\n                } else {\r\n                    if (features[3] <= 42.5) {\r\n                        if (features[1] <= 65.0) {\r\n                            classes[0] = 11; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 11; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 3.0) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 16; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 30.5) {\r\n                if (features[0] <= 0.5) {\r\n                    if (features[2] <= 31.600000381469727) {\r\n                        classes[0] = 4; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[3] <= 27.5) {\r\n                            classes[0] = 9; \r\n                            classes[1] = 27; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 41.849998474121094) {\r\n                        if (features[2] <= 33.650001525878906) {\r\n                            classes[0] = 36; \r\n                            classes[1] = 31; \r\n                        } else {\r\n                            classes[0] = 46; \r\n                            classes[1] = 11; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 21.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 16; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[0] <= 1.5) {\r\n                    if (features[3] <= 40.5) {\r\n                        if (features[2] <= 43.19999694824219) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 24; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 5; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 89.0) {\r\n                            classes[0] = 5; \r\n                            classes[1] = 20; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 77.0) {\r\n                        if (features[2] <= 35.400001525878906) {\r\n                            classes[0] = 18; \r\n                            classes[1] = 42; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 22; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 60.5) {\r\n                            classes[0] = 25; \r\n                            classes[1] = 45; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[0] <= 2.5) {\r\n            if (features[3] <= 28.5) {\r\n                if (features[2] <= 42.5) {\r\n                    if (features[2] <= 33.44999694824219) {\r\n                        if (features[3] <= 26.5) {\r\n                            classes[0] = 87; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 67.0) {\r\n                            classes[0] = 14; \r\n                            classes[1] = 13; \r\n                        } else {\r\n                            classes[0] = 23; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 87.0) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 11; \r\n                    } else {\r\n                        if (features[3] <= 26.5) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[0] <= 1.5) {\r\n                    if (features[2] <= 27.049999237060547) {\r\n                        classes[0] = 3; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[1] <= 83.0) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 26; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 12; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 33.75) {\r\n                        if (features[2] <= 26.299999237060547) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 5; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 8; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 42.5) {\r\n                if (features[2] <= 26.350000381469727) {\r\n                    if (features[2] <= 10.550000190734863) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 1; \r\n                    } else {\r\n                        if (features[2] <= 23.5) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 18; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 23.0) {\r\n                        if (features[3] <= 21.5) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 5; \r\n                            classes[1] = 4; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 51.0) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 13; \r\n                        } else {\r\n                            classes[0] = 56; \r\n                            classes[1] = 96; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 24.25) {\r\n                    if (features[1] <= 93.0) {\r\n                        if (features[3] <= 59.0) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 1; \r\n                    }\r\n                } else {\r\n                    if (features[1] <= 89.0) {\r\n                        if (features[2] <= 35.75) {\r\n                            classes[0] = 17; \r\n                            classes[1] = 38; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 31; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 20; \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 28.5) {\r\n            if (features[3] <= 22.5) {\r\n                if (features[1] <= 75.5) {\r\n                    if (features[2] <= 33.400001525878906) {\r\n                        if (features[0] <= 2.5) {\r\n                            classes[0] = 51; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 21.5) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 35.150001525878906) {\r\n                        if (features[3] <= 21.5) {\r\n                            classes[0] = 5; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 5; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 95.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[0] <= 0.5) {\r\n                    if (features[1] <= 79.0) {\r\n                        if (features[2] <= 29.149999618530273) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 22; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 7; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[1] <= 93.0) {\r\n                        if (features[0] <= 1.5) {\r\n                            classes[0] = 33; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 49; \r\n                            classes[1] = 22; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 2; \r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 61.5) {\r\n                if (features[0] <= 4.5) {\r\n                    if (features[3] <= 41.5) {\r\n                        if (features[2] <= 30.450000762939453) {\r\n                            classes[0] = 17; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 25; \r\n                            classes[1] = 26; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 74.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 12; \r\n                        } else {\r\n                            classes[0] = 6; \r\n                            classes[1] = 6; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 7.5) {\r\n                        if (features[3] <= 36.5) {\r\n                            classes[0] = 10; \r\n                            classes[1] = 23; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 60; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 32.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 36; \r\n                            classes[1] = 52; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[0] <= 4.5) {\r\n                    if (features[2] <= 29.600000381469727) {\r\n                        classes[0] = 3; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 5; \r\n                    }\r\n                } else {\r\n                    classes[0] = 10; \r\n                    classes[1] = 0; \r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 30.950000762939453) {\r\n            if (features[2] <= 26.299999237060547) {\r\n                if (features[3] <= 48.5) {\r\n                    if (features[1] <= 65.0) {\r\n                        if (features[0] <= 2.5) {\r\n                            classes[0] = 21; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 6; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 39; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[3] <= 56.0) {\r\n                        if (features[0] <= 3.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 9; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 22.850000381469727) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 4; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[1] <= 69.0) {\r\n                    if (features[2] <= 27.700000762939453) {\r\n                        if (features[1] <= 65.0) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 9; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 24.5) {\r\n                            classes[0] = 22; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 8; \r\n                            classes[1] = 6; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 41.0) {\r\n                        if (features[0] <= 1.5) {\r\n                            classes[0] = 11; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 15; \r\n                            classes[1] = 13; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 27.350000381469727) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 26; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[0] <= 6.5) {\r\n                if (features[3] <= 25.5) {\r\n                    if (features[2] <= 41.29999923706055) {\r\n                        if (features[2] <= 32.04999923706055) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 41; \r\n                            classes[1] = 19; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 48.900001525878906) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 19; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 42.900001525878906) {\r\n                        if (features[1] <= 77.0) {\r\n                            classes[0] = 19; \r\n                            classes[1] = 46; \r\n                        } else {\r\n                            classes[0] = 28; \r\n                            classes[1] = 26; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 0.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 17; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 15; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 35.75) {\r\n                    if (features[2] <= 35.25) {\r\n                        if (features[2] <= 32.650001525878906) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 19; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 5; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[2] <= 45.80000305175781) {\r\n                        if (features[2] <= 40.75) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 19; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 24; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 81.0) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 28.5) {\r\n            if (features[0] <= 3.5) {\r\n                if (features[2] <= 40.94999694824219) {\r\n                    if (features[2] <= 25.5) {\r\n                        if (features[2] <= 22.75) {\r\n                            classes[0] = 22; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 22; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 22.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 103; \r\n                            classes[1] = 30; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 1.5) {\r\n                        if (features[3] <= 24.5) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 9; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 8; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 2; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[1] <= 78.0) {\r\n                    if (features[0] <= 4.5) {\r\n                        if (features[3] <= 26.5) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 75.5) {\r\n                            classes[0] = 13; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 5.5) {\r\n                        if (features[3] <= 27.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 9; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 83.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 27.349998474121094) {\r\n                if (features[1] <= 27.0) {\r\n                    classes[0] = 0; \r\n                    classes[1] = 2; \r\n                } else {\r\n                    if (features[1] <= 63.0) {\r\n                        if (features[3] <= 46.0) {\r\n                            classes[0] = 10; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 46.5) {\r\n                            classes[0] = 14; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 12; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 62.5) {\r\n                    if (features[3] <= 39.5) {\r\n                        if (features[2] <= 36.25) {\r\n                            classes[0] = 32; \r\n                            classes[1] = 42; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 37; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 3.0) {\r\n                            classes[0] = 9; \r\n                            classes[1] = 15; \r\n                        } else {\r\n                            classes[0] = 18; \r\n                            classes[1] = 90; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 31.149999618530273) {\r\n                        classes[0] = 6; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[2] <= 33.099998474121094) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 25.450000762939453) {\r\n            if (features[3] <= 29.0) {\r\n                if (features[3] <= 23.5) {\r\n                    if (features[0] <= 2.5) {\r\n                        classes[0] = 21; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[3] <= 22.5) {\r\n                            classes[0] = 6; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 29; \r\n                    classes[1] = 0; \r\n                }\r\n            } else {\r\n                if (features[2] <= 24.399999618530273) {\r\n                    if (features[1] <= 74.5) {\r\n                        if (features[0] <= 8.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 9; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 23.399999618530273) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 8; \r\n                    classes[1] = 0; \r\n                }\r\n            }\r\n        } else {\r\n            if (features[0] <= 4.5) {\r\n                if (features[1] <= 69.0) {\r\n                    if (features[3] <= 22.5) {\r\n                        if (features[3] <= 21.5) {\r\n                            classes[0] = 13; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 11; \r\n                            classes[1] = 4; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 0.5) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 17; \r\n                        } else {\r\n                            classes[0] = 43; \r\n                            classes[1] = 30; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 45.400001525878906) {\r\n                        if (features[1] <= 74.5) {\r\n                            classes[0] = 21; \r\n                            classes[1] = 42; \r\n                        } else {\r\n                            classes[0] = 44; \r\n                            classes[1] = 27; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 22.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 17; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 27.849998474121094) {\r\n                    if (features[3] <= 52.5) {\r\n                        if (features[0] <= 5.5) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 11; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 5; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[3] <= 59.0) {\r\n                        if (features[0] <= 6.5) {\r\n                            classes[0] = 14; \r\n                            classes[1] = 38; \r\n                        } else {\r\n                            classes[0] = 18; \r\n                            classes[1] = 107; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 4; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 29.399999618530273) {\r\n            if (features[0] <= 2.5) {\r\n                if (features[1] <= 67.0) {\r\n                    classes[0] = 42; \r\n                    classes[1] = 0; \r\n                } else {\r\n                    if (features[1] <= 85.0) {\r\n                        if (features[1] <= 83.0) {\r\n                            classes[0] = 26; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 6; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 60.5) {\r\n                    if (features[2] <= 22.75) {\r\n                        if (features[1] <= 94.0) {\r\n                            classes[0] = 21; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 58.5) {\r\n                            classes[0] = 42; \r\n                            classes[1] = 27; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 8; \r\n                    classes[1] = 0; \r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 42.19999694824219) {\r\n                if (features[3] <= 30.5) {\r\n                    if (features[1] <= 22.0) {\r\n                        if (features[0] <= 7.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 12; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 75.5) {\r\n                            classes[0] = 76; \r\n                            classes[1] = 22; \r\n                        } else {\r\n                            classes[0] = 21; \r\n                            classes[1] = 19; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 59.0) {\r\n                        classes[0] = 3; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[3] <= 39.5) {\r\n                            classes[0] = 18; \r\n                            classes[1] = 48; \r\n                        } else {\r\n                            classes[0] = 14; \r\n                            classes[1] = 79; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 44.650001525878906) {\r\n                    classes[0] = 0; \r\n                    classes[1] = 26; \r\n                } else {\r\n                    if (features[2] <= 45.349998474121094) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[3] <= 39.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 30; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 27.849998474121094) {\r\n            if (features[3] <= 31.5) {\r\n                if (features[3] <= 22.5) {\r\n                    classes[0] = 51; \r\n                    classes[1] = 0; \r\n                } else {\r\n                    if (features[2] <= 26.450000762939453) {\r\n                        if (features[3] <= 23.5) {\r\n                            classes[0] = 8; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 25; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 26.700000762939453) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 55.5) {\r\n                    if (features[3] <= 42.5) {\r\n                        if (features[3] <= 34.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 6; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 50.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 6; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 8; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 4.5) {\r\n                        if (features[3] <= 61.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 7; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 24.5) {\r\n                if (features[1] <= 81.0) {\r\n                    if (features[0] <= 0.5) {\r\n                        if (features[2] <= 38.599998474121094) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 69.0) {\r\n                            classes[0] = 32; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 15; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 51.400001525878906) {\r\n                        if (features[3] <= 22.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 13; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 2; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 40.5) {\r\n                    if (features[2] <= 40.94999694824219) {\r\n                        if (features[1] <= 85.0) {\r\n                            classes[0] = 65; \r\n                            classes[1] = 95; \r\n                        } else {\r\n                            classes[0] = 14; \r\n                            classes[1] = 5; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 35.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 28; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 35.75) {\r\n                        if (features[1] <= 59.0) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 15; \r\n                            classes[1] = 44; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 5.5) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 9; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 33; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 28.849998474121094) {\r\n            if (features[3] <= 27.5) {\r\n                if (features[1] <= 85.0) {\r\n                    if (features[0] <= 2.5) {\r\n                        classes[0] = 61; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[1] <= 55.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 5.5) {\r\n                        classes[0] = 3; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 1; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[1] <= 53.0) {\r\n                    if (features[0] <= 5.0) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 5; \r\n                    } else {\r\n                        if (features[3] <= 29.0) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 5; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 23.200000762939453) {\r\n                        classes[0] = 14; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[1] <= 63.0) {\r\n                            classes[0] = 9; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 26; \r\n                            classes[1] = 22; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[1] <= 89.0) {\r\n                if (features[2] <= 29.100000381469727) {\r\n                    classes[0] = 0; \r\n                    classes[1] = 11; \r\n                } else {\r\n                    if (features[0] <= 2.5) {\r\n                        if (features[3] <= 24.5) {\r\n                            classes[0] = 42; \r\n                            classes[1] = 17; \r\n                        } else {\r\n                            classes[0] = 36; \r\n                            classes[1] = 55; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 29.650001525878906) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 61; \r\n                            classes[1] = 136; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 45.0) {\r\n                    if (features[0] <= 2.0) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 20; \r\n                    } else {\r\n                        if (features[0] <= 4.5) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 9; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 32.70000076293945) {\r\n                        if (features[0] <= 2.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 2; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 27.25) {\r\n            if (features[0] <= 5.5) {\r\n                if (features[2] <= 25.5) {\r\n                    if (features[1] <= 73.0) {\r\n                        classes[0] = 42; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[3] <= 31.5) {\r\n                            classes[0] = 13; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 1.5) {\r\n                        classes[0] = 8; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[0] <= 4.0) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 5; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 56.0) {\r\n                    if (features[2] <= 11.25) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 8; \r\n                    } else {\r\n                        if (features[3] <= 46.5) {\r\n                            classes[0] = 12; \r\n                            classes[1] = 6; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 8; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 7; \r\n                    classes[1] = 0; \r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 42.19999694824219) {\r\n                if (features[0] <= 6.5) {\r\n                    if (features[2] <= 38.04999923706055) {\r\n                        if (features[1] <= 69.0) {\r\n                            classes[0] = 76; \r\n                            classes[1] = 49; \r\n                        } else {\r\n                            classes[0] = 49; \r\n                            classes[1] = 78; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 27.5) {\r\n                            classes[0] = 23; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 16; \r\n                            classes[1] = 12; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 59.0) {\r\n                        if (features[3] <= 33.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 12; \r\n                        } else {\r\n                            classes[0] = 21; \r\n                            classes[1] = 50; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 2; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[0] <= 7.5) {\r\n                    if (features[3] <= 46.5) {\r\n                        if (features[0] <= 6.5) {\r\n                            classes[0] = 6; \r\n                            classes[1] = 31; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 77.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 0; \r\n                    classes[1] = 11; \r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 26.5) {\r\n            if (features[3] <= 22.5) {\r\n                if (features[0] <= 3.5) {\r\n                    if (features[2] <= 33.400001525878906) {\r\n                        if (features[0] <= 2.5) {\r\n                            classes[0] = 55; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 6; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 55.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 12; \r\n                            classes[1] = 11; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 21.5) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[2] <= 29.700000762939453) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[1] <= 52.0) {\r\n                    if (features[3] <= 24.5) {\r\n                        if (features[0] <= 1.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 6; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 0.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 61.0) {\r\n                        if (features[2] <= 32.150001525878906) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 41.29999923706055) {\r\n                            classes[0] = 54; \r\n                            classes[1] = 17; \r\n                        } else {\r\n                            classes[0] = 6; \r\n                            classes[1] = 12; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 29.650001525878906) {\r\n                if (features[2] <= 9.199999809265137) {\r\n                    classes[0] = 0; \r\n                    classes[1] = 5; \r\n                } else {\r\n                    if (features[2] <= 23.349998474121094) {\r\n                        classes[0] = 13; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[3] <= 60.5) {\r\n                            classes[0] = 43; \r\n                            classes[1] = 46; \r\n                        } else {\r\n                            classes[0] = 8; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 41.54999923706055) {\r\n                    if (features[2] <= 31.400001525878906) {\r\n                        if (features[3] <= 35.5) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 6; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 24; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 84.5) {\r\n                            classes[0] = 38; \r\n                            classes[1] = 93; \r\n                        } else {\r\n                            classes[0] = 13; \r\n                            classes[1] = 9; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 7.5) {\r\n                        if (features[3] <= 46.5) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 26; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 19; \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 26.299999237060547) {\r\n            if (features[3] <= 31.5) {\r\n                if (features[1] <= 55.0) {\r\n                    if (features[2] <= 25.350000381469727) {\r\n                        classes[0] = 13; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[3] <= 23.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 54; \r\n                    classes[1] = 0; \r\n                }\r\n            } else {\r\n                if (features[3] <= 44.5) {\r\n                    if (features[2] <= 23.700000762939453) {\r\n                        if (features[3] <= 35.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 72.0) {\r\n                            classes[0] = 5; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 56.0) {\r\n                        if (features[0] <= 3.5) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 9; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 4.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 24.5) {\r\n                if (features[1] <= 83.0) {\r\n                    if (features[2] <= 33.44999694824219) {\r\n                        if (features[1] <= 69.0) {\r\n                            classes[0] = 36; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 1.5) {\r\n                            classes[0] = 14; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 14; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 23.5) {\r\n                        if (features[2] <= 48.900001525878906) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 12; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 30.5) {\r\n                    if (features[3] <= 29.5) {\r\n                        if (features[2] <= 41.75) {\r\n                            classes[0] = 52; \r\n                            classes[1] = 48; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 16; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 8; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[2] <= 37.650001525878906) {\r\n                        if (features[1] <= 84.5) {\r\n                            classes[0] = 44; \r\n                            classes[1] = 93; \r\n                        } else {\r\n                            classes[0] = 14; \r\n                            classes[1] = 6; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 0.5) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 56; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 27.5) {\r\n            if (features[0] <= 0.5) {\r\n                if (features[3] <= 26.5) {\r\n                    if (features[1] <= 81.0) {\r\n                        if (features[2] <= 31.700000762939453) {\r\n                            classes[0] = 10; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 12; \r\n                            classes[1] = 12; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 87.0) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 9; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 3; \r\n                    classes[1] = 0; \r\n                }\r\n            } else {\r\n                if (features[0] <= 2.5) {\r\n                    if (features[3] <= 22.5) {\r\n                        if (features[2] <= 33.04999923706055) {\r\n                            classes[0] = 36; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 23.5) {\r\n                            classes[0] = 11; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 33; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 69.0) {\r\n                        if (features[2] <= 34.54999923706055) {\r\n                            classes[0] = 29; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 29.350000381469727) {\r\n                            classes[0] = 6; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 16; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 59.0) {\r\n                if (features[0] <= 5.5) {\r\n                    if (features[2] <= 25.700000762939453) {\r\n                        if (features[0] <= 1.5) {\r\n                            classes[0] = 5; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 14; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 50.5) {\r\n                            classes[0] = 58; \r\n                            classes[1] = 101; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 16; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 26.350000381469727) {\r\n                        if (features[1] <= 69.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 8; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 50.5) {\r\n                            classes[0] = 15; \r\n                            classes[1] = 89; \r\n                        } else {\r\n                            classes[0] = 5; \r\n                            classes[1] = 5; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 34.45000076293945) {\r\n                    if (features[1] <= 71.0) {\r\n                        classes[0] = 9; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[1] <= 74.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 11; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 0; \r\n                    classes[1] = 2; \r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 28.5) {\r\n            if (features[2] <= 40.29999923706055) {\r\n                if (features[0] <= 2.5) {\r\n                    if (features[1] <= 19.0) {\r\n                        if (features[3] <= 24.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 8; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 27.5) {\r\n                            classes[0] = 130; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 34.650001525878906) {\r\n                        if (features[3] <= 23.5) {\r\n                            classes[0] = 12; \r\n                            classes[1] = 6; \r\n                        } else {\r\n                            classes[0] = 26; \r\n                            classes[1] = 4; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 27.0) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[0] <= 1.5) {\r\n                    if (features[1] <= 56.0) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 8; \r\n                    } else {\r\n                        if (features[2] <= 41.79999923706055) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 16; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 22.5) {\r\n                        classes[0] = 1; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[1] <= 71.0) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 5; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 27.049999237060547) {\r\n                if (features[1] <= 84.0) {\r\n                    if (features[2] <= 24.399999618530273) {\r\n                        if (features[0] <= 5.5) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 13; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 38.0) {\r\n                            classes[0] = 10; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 9; \r\n                            classes[1] = 4; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 38.5) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[0] <= 7.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 6; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 30.849998474121094) {\r\n                    if (features[1] <= 89.0) {\r\n                        if (features[3] <= 37.5) {\r\n                            classes[0] = 10; \r\n                            classes[1] = 31; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 28; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 36.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 5.5) {\r\n                        if (features[2] <= 37.150001525878906) {\r\n                            classes[0] = 21; \r\n                            classes[1] = 48; \r\n                        } else {\r\n                            classes[0] = 16; \r\n                            classes[1] = 6; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 35.75) {\r\n                            classes[0] = 13; \r\n                            classes[1] = 17; \r\n                        } else {\r\n                            classes[0] = 6; \r\n                            classes[1] = 52; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 25.5) {\r\n            if (features[2] <= 31.400001525878906) {\r\n                if (features[0] <= 6.0) {\r\n                    if (features[2] <= 25.5) {\r\n                        classes[0] = 38; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[2] <= 25.75) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 36; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 0; \r\n                    classes[1] = 1; \r\n                }\r\n            } else {\r\n                if (features[0] <= 1.5) {\r\n                    if (features[3] <= 22.5) {\r\n                        if (features[2] <= 35.19999694824219) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 12; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 0.5) {\r\n                            classes[0] = 10; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 71.0) {\r\n                        if (features[2] <= 36.900001525878906) {\r\n                            classes[0] = 21; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 88.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 6; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 62.5) {\r\n                if (features[2] <= 42.19999694824219) {\r\n                    if (features[3] <= 28.5) {\r\n                        if (features[1] <= 74.5) {\r\n                            classes[0] = 24; \r\n                            classes[1] = 24; \r\n                        } else {\r\n                            classes[0] = 15; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 0.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 15; \r\n                        } else {\r\n                            classes[0] = 91; \r\n                            classes[1] = 184; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 51.0) {\r\n                        if (features[1] <= 79.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 13; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 30; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            } else {\r\n                classes[0] = 10; \r\n                classes[1] = 0; \r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 30.5) {\r\n            if (features[3] <= 21.5) {\r\n                if (features[1] <= 61.0) {\r\n                    if (features[0] <= 0.5) {\r\n                        if (features[1] <= 59.0) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 10; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    classes[0] = 21; \r\n                    classes[1] = 0; \r\n                }\r\n            } else {\r\n                if (features[1] <= 75.5) {\r\n                    if (features[0] <= 0.5) {\r\n                        if (features[2] <= 31.549999237060547) {\r\n                            classes[0] = 6; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 6; \r\n                            classes[1] = 15; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 30.899999618530273) {\r\n                            classes[0] = 81; \r\n                            classes[1] = 19; \r\n                        } else {\r\n                            classes[0] = 44; \r\n                            classes[1] = 35; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 42.20000076293945) {\r\n                        if (features[1] <= 87.0) {\r\n                            classes[0] = 25; \r\n                            classes[1] = 15; \r\n                        } else {\r\n                            classes[0] = 11; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 23.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 19; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[1] <= 35.0) {\r\n                classes[0] = 4; \r\n                classes[1] = 0; \r\n            } else {\r\n                if (features[2] <= 24.75) {\r\n                    if (features[1] <= 65.0) {\r\n                        if (features[3] <= 44.5) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 11; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[3] <= 59.5) {\r\n                        if (features[2] <= 34.25) {\r\n                            classes[0] = 39; \r\n                            classes[1] = 81; \r\n                        } else {\r\n                            classes[0] = 18; \r\n                            classes[1] = 70; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 4.5) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 28.849998474121094) {\r\n            if (features[3] <= 30.5) {\r\n                if (features[3] <= 23.5) {\r\n                    if (features[3] <= 22.5) {\r\n                        if (features[2] <= 25.5) {\r\n                            classes[0] = 25; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 23.200000762939453) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 6; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 19.0) {\r\n                        if (features[0] <= 4.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 47; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 23.200000762939453) {\r\n                    if (features[1] <= 93.0) {\r\n                        classes[0] = 11; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 1; \r\n                    }\r\n                } else {\r\n                    if (features[3] <= 56.0) {\r\n                        if (features[2] <= 28.450000762939453) {\r\n                            classes[0] = 10; \r\n                            classes[1] = 20; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 4.5) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 28.5) {\r\n                if (features[0] <= 0.5) {\r\n                    if (features[3] <= 22.5) {\r\n                        if (features[2] <= 41.349998474121094) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 5; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 27.5) {\r\n                            classes[0] = 17; \r\n                            classes[1] = 20; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 42.5) {\r\n                        if (features[3] <= 24.5) {\r\n                            classes[0] = 43; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 36; \r\n                            classes[1] = 19; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 87.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 13; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[1] <= 55.0) {\r\n                    if (features[0] <= 11.0) {\r\n                        if (features[2] <= 30.600000381469727) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 5; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 4; \r\n                    }\r\n                } else {\r\n                    if (features[3] <= 62.5) {\r\n                        if (features[0] <= 4.5) {\r\n                            classes[0] = 23; \r\n                            classes[1] = 53; \r\n                        } else {\r\n                            classes[0] = 24; \r\n                            classes[1] = 118; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 4; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 26.5) {\r\n            if (features[2] <= 30.950000762939453) {\r\n                if (features[0] <= 7.0) {\r\n                    if (features[0] <= 2.5) {\r\n                        if (features[0] <= 0.5) {\r\n                            classes[0] = 12; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 80; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 23.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 12; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 0; \r\n                    classes[1] = 1; \r\n                }\r\n            } else {\r\n                if (features[1] <= 79.0) {\r\n                    if (features[0] <= 2.5) {\r\n                        if (features[1] <= 67.0) {\r\n                            classes[0] = 21; \r\n                            classes[1] = 15; \r\n                        } else {\r\n                            classes[0] = 23; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 55.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 5; \r\n                            classes[1] = 8; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 32.599998474121094) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 6; \r\n                    } else {\r\n                        if (features[1] <= 83.0) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 12; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 62.5) {\r\n                if (features[3] <= 29.5) {\r\n                    if (features[2] <= 26.0) {\r\n                        classes[0] = 9; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[2] <= 45.400001525878906) {\r\n                            classes[0] = 27; \r\n                            classes[1] = 30; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 5; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 1.5) {\r\n                        if (features[2] <= 27.049999237060547) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 48; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 27.25) {\r\n                            classes[0] = 23; \r\n                            classes[1] = 12; \r\n                        } else {\r\n                            classes[0] = 48; \r\n                            classes[1] = 112; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 37.04999923706055) {\r\n                    if (features[3] <= 69.5) {\r\n                        classes[0] = 9; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[3] <= 71.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 0; \r\n                    classes[1] = 1; \r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 26.450000762939453) {\r\n            if (features[1] <= 67.0) {\r\n                if (features[0] <= 9.5) {\r\n                    classes[0] = 47; \r\n                    classes[1] = 0; \r\n                } else {\r\n                    classes[0] = 0; \r\n                    classes[1] = 1; \r\n                }\r\n            } else {\r\n                if (features[0] <= 3.5) {\r\n                    if (features[3] <= 31.5) {\r\n                        classes[0] = 18; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[3] <= 34.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 9; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 36.5) {\r\n                        classes[0] = 5; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[3] <= 56.0) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 9; \r\n                        } else {\r\n                            classes[0] = 9; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 42.19999694824219) {\r\n                if (features[1] <= 61.0) {\r\n                    if (features[0] <= 6.5) {\r\n                        if (features[2] <= 33.099998474121094) {\r\n                            classes[0] = 23; \r\n                            classes[1] = 16; \r\n                        } else {\r\n                            classes[0] = 20; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 39.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 28.5) {\r\n                        if (features[1] <= 77.0) {\r\n                            classes[0] = 33; \r\n                            classes[1] = 31; \r\n                        } else {\r\n                            classes[0] = 25; \r\n                            classes[1] = 8; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 84.5) {\r\n                            classes[0] = 53; \r\n                            classes[1] = 128; \r\n                        } else {\r\n                            classes[0] = 23; \r\n                            classes[1] = 17; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[0] <= 5.5) {\r\n                    if (features[3] <= 22.5) {\r\n                        classes[0] = 2; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[3] <= 46.5) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 44; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 0; \r\n                    classes[1] = 16; \r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 27.849998474121094) {\r\n            if (features[0] <= 6.5) {\r\n                if (features[3] <= 45.5) {\r\n                    if (features[1] <= 61.0) {\r\n                        classes[0] = 34; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[3] <= 26.5) {\r\n                            classes[0] = 48; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 21; \r\n                            classes[1] = 4; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 81.0) {\r\n                        if (features[3] <= 52.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 5; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[1] <= 66.0) {\r\n                    classes[0] = 0; \r\n                    classes[1] = 11; \r\n                } else {\r\n                    if (features[3] <= 38.0) {\r\n                        classes[0] = 5; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[3] <= 56.0) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 15; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 24.5) {\r\n                if (features[2] <= 28.549999237060547) {\r\n                    classes[0] = 0; \r\n                    classes[1] = 1; \r\n                } else {\r\n                    if (features[1] <= 82.0) {\r\n                        if (features[1] <= 23.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 54; \r\n                            classes[1] = 17; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 22.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 62.5) {\r\n                    if (features[1] <= 67.0) {\r\n                        if (features[1] <= 61.0) {\r\n                            classes[0] = 10; \r\n                            classes[1] = 27; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 31; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 69.0) {\r\n                            classes[0] = 12; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 73; \r\n                            classes[1] = 152; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 4.5) {\r\n                        if (features[3] <= 65.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 7; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 26.299999237060547) {\r\n            if (features[0] <= 2.5) {\r\n                classes[0] = 58; \r\n                classes[1] = 0; \r\n            } else {\r\n                if (features[3] <= 47.0) {\r\n                    if (features[3] <= 23.5) {\r\n                        if (features[3] <= 21.5) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 4; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 7.5) {\r\n                            classes[0] = 23; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 25.950000762939453) {\r\n                        if (features[0] <= 8.5) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 13; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 2; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 41.75) {\r\n                if (features[0] <= 6.5) {\r\n                    if (features[2] <= 39.45000076293945) {\r\n                        if (features[3] <= 24.5) {\r\n                            classes[0] = 53; \r\n                            classes[1] = 11; \r\n                        } else {\r\n                            classes[0] = 83; \r\n                            classes[1] = 108; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 10; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[3] <= 59.0) {\r\n                        if (features[2] <= 31.150001525878906) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 26; \r\n                        } else {\r\n                            classes[0] = 22; \r\n                            classes[1] = 41; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 4; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 31.5) {\r\n                    if (features[2] <= 45.44999694824219) {\r\n                        if (features[2] <= 44.75) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 20; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 23; \r\n                    }\r\n                } else {\r\n                    if (features[3] <= 32.5) {\r\n                        classes[0] = 2; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[0] <= 5.5) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 11; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 13; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 29.5) {\r\n            if (features[2] <= 30.950000762939453) {\r\n                if (features[0] <= 6.5) {\r\n                    if (features[1] <= 71.0) {\r\n                        if (features[0] <= 1.5) {\r\n                            classes[0] = 37; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 38; \r\n                            classes[1] = 6; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 28; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[1] <= 30.0) {\r\n                        classes[0] = 1; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 4; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[1] <= 89.0) {\r\n                    if (features[2] <= 45.400001525878906) {\r\n                        if (features[1] <= 85.0) {\r\n                            classes[0] = 68; \r\n                            classes[1] = 59; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 8; \r\n                    }\r\n                } else {\r\n                    if (features[2] <= 50.79999923706055) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 5; \r\n                    } else {\r\n                        if (features[3] <= 25.5) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[1] <= 61.0) {\r\n                if (features[1] <= 57.0) {\r\n                    if (features[2] <= 33.54999923706055) {\r\n                        if (features[3] <= 54.0) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 11; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 32.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 2.5) {\r\n                        if (features[0] <= 0.5) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 9; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 56.0) {\r\n                    if (features[1] <= 64.5) {\r\n                        if (features[2] <= 26.200000762939453) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 24; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 30.5) {\r\n                            classes[0] = 8; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 55; \r\n                            classes[1] = 157; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 4.5) {\r\n                        if (features[0] <= 3.5) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 6; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 59.5) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[0] <= 5.5) {\r\n            if (features[2] <= 27.75) {\r\n                if (features[2] <= 25.5) {\r\n                    if (features[3] <= 58.5) {\r\n                        if (features[0] <= 2.5) {\r\n                            classes[0] = 45; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 16; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 63.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 5; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 42.0) {\r\n                        if (features[0] <= 2.5) {\r\n                            classes[0] = 18; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 6; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 1; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[1] <= 42.0) {\r\n                    if (features[0] <= 2.5) {\r\n                        if (features[0] <= 0.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 6; \r\n                    }\r\n                } else {\r\n                    if (features[1] <= 69.0) {\r\n                        if (features[3] <= 28.5) {\r\n                            classes[0] = 61; \r\n                            classes[1] = 30; \r\n                        } else {\r\n                            classes[0] = 6; \r\n                            classes[1] = 20; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 48.04999923706055) {\r\n                            classes[0] = 79; \r\n                            classes[1] = 86; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 6; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 26.299999237060547) {\r\n                if (features[0] <= 9.5) {\r\n                    if (features[2] <= 25.150001525878906) {\r\n                        if (features[0] <= 8.5) {\r\n                            classes[0] = 5; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 6; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    classes[0] = 7; \r\n                    classes[1] = 0; \r\n                }\r\n            } else {\r\n                if (features[2] <= 36.94999694824219) {\r\n                    if (features[1] <= 77.0) {\r\n                        if (features[3] <= 57.5) {\r\n                            classes[0] = 18; \r\n                            classes[1] = 34; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 35.400001525878906) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 28; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 83.0) {\r\n                        if (features[1] <= 69.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 23; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 89.0) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 6; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 6; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 25.450000762939453) {\r\n            if (features[3] <= 49.5) {\r\n                if (features[3] <= 29.0) {\r\n                    if (features[0] <= 2.5) {\r\n                        classes[0] = 49; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[3] <= 23.5) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 8; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 10.5) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 1; \r\n                    } else {\r\n                        if (features[3] <= 33.5) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 11; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[0] <= 6.0) {\r\n                    classes[0] = 1; \r\n                    classes[1] = 0; \r\n                } else {\r\n                    if (features[3] <= 56.5) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 6; \r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 30.5) {\r\n                if (features[2] <= 41.75) {\r\n                    if (features[0] <= 6.5) {\r\n                        if (features[0] <= 2.5) {\r\n                            classes[0] = 83; \r\n                            classes[1] = 35; \r\n                        } else {\r\n                            classes[0] = 42; \r\n                            classes[1] = 35; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 9.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 9; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 56.5) {\r\n                        if (features[0] <= 1.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 26.5) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 20; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 11; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 62.5) {\r\n                    if (features[3] <= 42.5) {\r\n                        if (features[1] <= 89.0) {\r\n                            classes[0] = 51; \r\n                            classes[1] = 74; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 11; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 61.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 14; \r\n                            classes[1] = 73; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 4.5) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 2; \r\n                    } else {\r\n                        classes[0] = 7; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[0] <= 5.5) {\r\n            if (features[2] <= 26.899999618530273) {\r\n                if (features[2] <= 26.25) {\r\n                    if (features[3] <= 31.5) {\r\n                        classes[0] = 59; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[0] <= 1.5) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 9; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 1.5) {\r\n                        classes[0] = 6; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[0] <= 4.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 34.5) {\r\n                    if (features[1] <= 15.0) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 12; \r\n                    } else {\r\n                        if (features[1] <= 79.0) {\r\n                            classes[0] = 121; \r\n                            classes[1] = 56; \r\n                        } else {\r\n                            classes[0] = 24; \r\n                            classes[1] = 27; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 27.5) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 5; \r\n                    } else {\r\n                        if (features[1] <= 109.0) {\r\n                            classes[0] = 16; \r\n                            classes[1] = 42; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 37.5) {\r\n                if (features[2] <= 24.25) {\r\n                    if (features[0] <= 9.5) {\r\n                        classes[0] = 6; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[2] <= 11.100000381469727) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 56.0) {\r\n                        if (features[3] <= 46.5) {\r\n                            classes[0] = 20; \r\n                            classes[1] = 53; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 30; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 7; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 38.75) {\r\n                    if (features[0] <= 7.5) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 8; \r\n                    } else {\r\n                        if (features[3] <= 39.5) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 5; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 0; \r\n                    classes[1] = 38; \r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 24.5) {\r\n            if (features[1] <= 83.0) {\r\n                if (features[2] <= 31.799999237060547) {\r\n                    if (features[1] <= 69.0) {\r\n                        classes[0] = 49; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[1] <= 71.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 16; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 54.0) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 5; \r\n                    } else {\r\n                        if (features[1] <= 64.5) {\r\n                            classes[0] = 12; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 19; \r\n                            classes[1] = 4; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[0] <= 2.5) {\r\n                    if (features[2] <= 37.099998474121094) {\r\n                        classes[0] = 5; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[2] <= 48.19999694824219) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 93.0) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 5; \r\n                    } else {\r\n                        classes[0] = 2; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 27.049999237060547) {\r\n                if (features[3] <= 31.5) {\r\n                    if (features[1] <= 73.0) {\r\n                        classes[0] = 19; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[3] <= 27.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 6; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 25.950000762939453) {\r\n                        if (features[1] <= 61.0) {\r\n                            classes[0] = 5; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 11; \r\n                            classes[1] = 17; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 8; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[0] <= 4.5) {\r\n                    if (features[0] <= 1.5) {\r\n                        if (features[2] <= 34.04999923706055) {\r\n                            classes[0] = 12; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 14; \r\n                            classes[1] = 52; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 69.0) {\r\n                            classes[0] = 31; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 29; \r\n                            classes[1] = 34; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 59.5) {\r\n                        if (features[0] <= 9.5) {\r\n                            classes[0] = 26; \r\n                            classes[1] = 101; \r\n                        } else {\r\n                            classes[0] = 15; \r\n                            classes[1] = 27; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 3; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[1] <= 61.0) {\r\n            if (features[1] <= 42.0) {\r\n                if (features[2] <= 29.899999618530273) {\r\n                    if (features[3] <= 33.5) {\r\n                        classes[0] = 7; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 1; \r\n                    }\r\n                } else {\r\n                    if (features[0] <= 1.5) {\r\n                        if (features[2] <= 43.19999694824219) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 2.5) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 23.5) {\r\n                    if (features[0] <= 2.5) {\r\n                        classes[0] = 29; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[0] <= 3.5) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 51.0) {\r\n                        if (features[1] <= 46.0) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 4; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 33.349998474121094) {\r\n                            classes[0] = 19; \r\n                            classes[1] = 6; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 24.5) {\r\n                if (features[2] <= 41.79999923706055) {\r\n                    if (features[2] <= 33.25) {\r\n                        if (features[0] <= 2.5) {\r\n                            classes[0] = 39; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 5; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 36.55000305175781) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 9; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 48.900001525878906) {\r\n                        if (features[0] <= 2.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 13; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[0] <= 13.5) {\r\n                    if (features[0] <= 0.5) {\r\n                        if (features[2] <= 27.349998474121094) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 8; \r\n                            classes[1] = 24; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 59.5) {\r\n                            classes[0] = 136; \r\n                            classes[1] = 183; \r\n                        } else {\r\n                            classes[0] = 8; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 0; \r\n                    classes[1] = 6; \r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 29.650001525878906) {\r\n            if (features[3] <= 27.5) {\r\n                if (features[0] <= 7.0) {\r\n                    if (features[0] <= 1.5) {\r\n                        classes[0] = 48; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[2] <= 28.799999237060547) {\r\n                            classes[0] = 50; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 0; \r\n                    classes[1] = 1; \r\n                }\r\n            } else {\r\n                if (features[3] <= 56.0) {\r\n                    if (features[0] <= 6.5) {\r\n                        if (features[2] <= 26.299999237060547) {\r\n                            classes[0] = 15; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 18; \r\n                            classes[1] = 13; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 85.0) {\r\n                            classes[0] = 5; \r\n                            classes[1] = 17; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 5; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 12; \r\n                    classes[1] = 0; \r\n                }\r\n            }\r\n        } else {\r\n            if (features[0] <= 2.5) {\r\n                if (features[0] <= 1.5) {\r\n                    if (features[3] <= 22.5) {\r\n                        if (features[1] <= 57.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 11; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 28.5) {\r\n                            classes[0] = 23; \r\n                            classes[1] = 33; \r\n                        } else {\r\n                            classes[0] = 8; \r\n                            classes[1] = 34; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 38.30000305175781) {\r\n                        if (features[2] <= 37.5) {\r\n                            classes[0] = 20; \r\n                            classes[1] = 6; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 10; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 59.0) {\r\n                    if (features[3] <= 52.5) {\r\n                        if (features[2] <= 39.349998474121094) {\r\n                            classes[0] = 53; \r\n                            classes[1] = 103; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 30; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 23; \r\n                    }\r\n                } else {\r\n                    classes[0] = 6; \r\n                    classes[1] = 0; \r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 27.849998474121094) {\r\n            if (features[2] <= 22.75) {\r\n                if (features[0] <= 8.5) {\r\n                    classes[0] = 25; \r\n                    classes[1] = 0; \r\n                } else {\r\n                    if (features[1] <= 41.0) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 1; \r\n                    } else {\r\n                        classes[0] = 1; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 22.950000762939453) {\r\n                    if (features[0] <= 2.5) {\r\n                        classes[0] = 1; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 4; \r\n                    }\r\n                } else {\r\n                    if (features[0] <= 1.5) {\r\n                        if (features[2] <= 27.349998474121094) {\r\n                            classes[0] = 32; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 27.549999237060547) {\r\n                            classes[0] = 36; \r\n                            classes[1] = 27; \r\n                        } else {\r\n                            classes[0] = 5; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 40.94999694824219) {\r\n                if (features[0] <= 2.5) {\r\n                    if (features[3] <= 31.5) {\r\n                        if (features[2] <= 31.400001525878906) {\r\n                            classes[0] = 21; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 52; \r\n                            classes[1] = 27; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 89.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 20; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 42.5) {\r\n                        if (features[3] <= 41.5) {\r\n                            classes[0] = 59; \r\n                            classes[1] = 84; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 32.80000305175781) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 27; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 27; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 32.5) {\r\n                    if (features[3] <= 31.5) {\r\n                        if (features[2] <= 45.400001525878906) {\r\n                            classes[0] = 8; \r\n                            classes[1] = 19; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 19; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 4; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[1] <= 79.0) {\r\n                        if (features[3] <= 45.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 11; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 26; \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 33.25) {\r\n            if (features[0] <= 4.5) {\r\n                if (features[3] <= 25.5) {\r\n                    if (features[1] <= 12.0) {\r\n                        if (features[2] <= 28.950000762939453) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 0.5) {\r\n                            classes[0] = 13; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 75; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 3.5) {\r\n                        if (features[3] <= 28.5) {\r\n                            classes[0] = 10; \r\n                            classes[1] = 17; \r\n                        } else {\r\n                            classes[0] = 26; \r\n                            classes[1] = 13; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 41.0) {\r\n                            classes[0] = 17; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 60.0) {\r\n                    if (features[3] <= 42.5) {\r\n                        if (features[1] <= 63.0) {\r\n                            classes[0] = 14; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 25; \r\n                            classes[1] = 27; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 56.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 30; \r\n                        } else {\r\n                            classes[0] = 8; \r\n                            classes[1] = 5; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 7; \r\n                    classes[1] = 0; \r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 30.5) {\r\n                if (features[0] <= 0.5) {\r\n                    if (features[2] <= 41.75) {\r\n                        if (features[2] <= 34.75) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 9; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 20; \r\n                    }\r\n                } else {\r\n                    if (features[2] <= 42.80000305175781) {\r\n                        if (features[1] <= 61.0) {\r\n                            classes[0] = 14; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 36; \r\n                            classes[1] = 20; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 99.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 34.099998474121094) {\r\n                    if (features[0] <= 5.5) {\r\n                        classes[0] = 4; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[2] <= 33.900001525878906) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 79.0) {\r\n                        if (features[2] <= 44.44999694824219) {\r\n                            classes[0] = 9; \r\n                            classes[1] = 46; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 34.0) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 46; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 26.450000762939453) {\r\n            if (features[2] <= 22.75) {\r\n                if (features[0] <= 9.5) {\r\n                    classes[0] = 35; \r\n                    classes[1] = 0; \r\n                } else {\r\n                    classes[0] = 0; \r\n                    classes[1] = 1; \r\n                }\r\n            } else {\r\n                if (features[0] <= 7.5) {\r\n                    if (features[3] <= 53.0) {\r\n                        if (features[2] <= 22.950000762939453) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 44; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 5.5) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 9.0) {\r\n                        if (features[3] <= 40.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 83.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[0] <= 5.5) {\r\n                if (features[3] <= 27.5) {\r\n                    if (features[0] <= 2.5) {\r\n                        if (features[2] <= 41.79999923706055) {\r\n                            classes[0] = 89; \r\n                            classes[1] = 17; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 13; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 53.0) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 11; \r\n                        } else {\r\n                            classes[0] = 18; \r\n                            classes[1] = 17; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 83.0) {\r\n                        if (features[0] <= 4.5) {\r\n                            classes[0] = 25; \r\n                            classes[1] = 95; \r\n                        } else {\r\n                            classes[0] = 13; \r\n                            classes[1] = 11; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 42.349998474121094) {\r\n                            classes[0] = 14; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 6; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 59.5) {\r\n                    if (features[3] <= 26.5) {\r\n                        if (features[1] <= 75.0) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 42.5) {\r\n                            classes[0] = 10; \r\n                            classes[1] = 52; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 59; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 2; \r\n                    classes[1] = 0; \r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 26.950000762939453) {\r\n            if (features[0] <= 6.5) {\r\n                if (features[1] <= 71.0) {\r\n                    if (features[2] <= 22.950000762939453) {\r\n                        if (features[2] <= 22.649999618530273) {\r\n                            classes[0] = 16; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 41; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[2] <= 25.700000762939453) {\r\n                        if (features[3] <= 31.5) {\r\n                            classes[0] = 17; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 5; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 73.0) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[1] <= 61.0) {\r\n                    if (features[3] <= 33.5) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 4; \r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[2] <= 11.100000381469727) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 1; \r\n                    } else {\r\n                        if (features[3] <= 56.0) {\r\n                            classes[0] = 6; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 8; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 30.5) {\r\n                if (features[2] <= 41.75) {\r\n                    if (features[1] <= 77.0) {\r\n                        if (features[3] <= 22.5) {\r\n                            classes[0] = 32; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 44; \r\n                            classes[1] = 52; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 6.5) {\r\n                            classes[0] = 32; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 26.5) {\r\n                        if (features[2] <= 52.75) {\r\n                            classes[0] = 5; \r\n                            classes[1] = 11; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 8; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 13; \r\n                    }\r\n                }\r\n            } else {\r\n                if (features[0] <= 4.5) {\r\n                    if (features[3] <= 51.0) {\r\n                        if (features[1] <= 69.0) {\r\n                            classes[0] = 16; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 11; \r\n                            classes[1] = 23; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 40.599998474121094) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 13; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 39.04999923706055) {\r\n                        if (features[3] <= 59.0) {\r\n                            classes[0] = 29; \r\n                            classes[1] = 97; \r\n                        } else {\r\n                            classes[0] = 6; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 40.75) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 22; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 23; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 31.5) {\r\n            if (features[2] <= 29.950000762939453) {\r\n                if (features[1] <= 12.0) {\r\n                    if (features[2] <= 26.25) {\r\n                        classes[0] = 7; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 2; \r\n                    }\r\n                } else {\r\n                    if (features[0] <= 7.5) {\r\n                        if (features[2] <= 22.950000762939453) {\r\n                            classes[0] = 17; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 76; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 71.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[1] <= 37.0) {\r\n                    if (features[0] <= 6.5) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 12; \r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[2] <= 41.79999923706055) {\r\n                        if (features[2] <= 36.650001525878906) {\r\n                            classes[0] = 62; \r\n                            classes[1] = 64; \r\n                        } else {\r\n                            classes[0] = 32; \r\n                            classes[1] = 6; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 30.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 17; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[1] <= 61.0) {\r\n                if (features[3] <= 38.5) {\r\n                    if (features[0] <= 2.0) {\r\n                        if (features[0] <= 0.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 26.150001525878906) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 12; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 43.5) {\r\n                        classes[0] = 10; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[0] <= 10.0) {\r\n                            classes[0] = 4; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 62.5) {\r\n                    if (features[2] <= 36.19999694824219) {\r\n                        if (features[1] <= 65.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 11; \r\n                        } else {\r\n                            classes[0] = 51; \r\n                            classes[1] = 89; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 46.150001525878906) {\r\n                            classes[0] = 5; \r\n                            classes[1] = 39; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 4; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 9; \r\n                    classes[1] = 0; \r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 27.5) {\r\n            if (features[1] <= 85.0) {\r\n                if (features[0] <= 2.5) {\r\n                    if (features[1] <= 75.5) {\r\n                        if (features[0] <= 0.5) {\r\n                            classes[0] = 18; \r\n                            classes[1] = 9; \r\n                        } else {\r\n                            classes[0] = 87; \r\n                            classes[1] = 5; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 45.54999923706055) {\r\n                            classes[0] = 18; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 61.0) {\r\n                        if (features[2] <= 32.25) {\r\n                            classes[0] = 12; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 4; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 24.5) {\r\n                            classes[0] = 13; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 15; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[0] <= 3.5) {\r\n                    if (features[1] <= 93.0) {\r\n                        if (features[1] <= 89.0) {\r\n                            classes[0] = 5; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 5; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 3; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[3] <= 23.5) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 8; \r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 55.5) {\r\n                if (features[2] <= 26.200000762939453) {\r\n                    if (features[1] <= 83.0) {\r\n                        if (features[0] <= 9.0) {\r\n                            classes[0] = 18; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 7.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 5; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 5.5) {\r\n                        if (features[1] <= 77.0) {\r\n                            classes[0] = 32; \r\n                            classes[1] = 71; \r\n                        } else {\r\n                            classes[0] = 29; \r\n                            classes[1] = 28; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 9.5) {\r\n                            classes[0] = 10; \r\n                            classes[1] = 63; \r\n                        } else {\r\n                            classes[0] = 11; \r\n                            classes[1] = 33; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 30.0) {\r\n                    if (features[1] <= 76.0) {\r\n                        classes[0] = 7; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[1] <= 79.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 32.70000076293945) {\r\n                        if (features[2] <= 32.20000076293945) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 11.0) {\r\n                            classes[0] = 5; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 28.100000381469727) {\r\n            if (features[0] <= 1.5) {\r\n                classes[0] = 46; \r\n                classes[1] = 0; \r\n            } else {\r\n                if (features[1] <= 73.0) {\r\n                    if (features[0] <= 9.5) {\r\n                        if (features[0] <= 3.5) {\r\n                            classes[0] = 21; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 20; \r\n                            classes[1] = 9; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 26.25) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 26.899999618530273) {\r\n                        classes[0] = 19; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[1] <= 82.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 41.650001525878906) {\r\n                if (features[1] <= 22.0) {\r\n                    if (features[0] <= 7.0) {\r\n                        if (features[3] <= 38.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 16; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 36.5) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 30.5) {\r\n                        if (features[0] <= 4.5) {\r\n                            classes[0] = 94; \r\n                            classes[1] = 35; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 17; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 39.5) {\r\n                            classes[0] = 29; \r\n                            classes[1] = 38; \r\n                        } else {\r\n                            classes[0] = 29; \r\n                            classes[1] = 96; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 22.5) {\r\n                    if (features[2] <= 42.400001525878906) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 1; \r\n                    } else {\r\n                        classes[0] = 2; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[0] <= 3.0) {\r\n                        if (features[3] <= 50.0) {\r\n                            classes[0] = 5; \r\n                            classes[1] = 28; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 46.45000076293945) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 26; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 9; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[0] <= 3.5) {\r\n            if (features[2] <= 32.70000076293945) {\r\n                if (features[1] <= 69.0) {\r\n                    if (features[2] <= 25.5) {\r\n                        classes[0] = 34; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[1] <= 22.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 44; \r\n                            classes[1] = 8; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 74.5) {\r\n                        if (features[3] <= 30.5) {\r\n                            classes[0] = 13; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 11; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 31.5) {\r\n                            classes[0] = 14; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 6; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[2] <= 42.80000305175781) {\r\n                    if (features[3] <= 28.5) {\r\n                        if (features[3] <= 27.5) {\r\n                            classes[0] = 47; \r\n                            classes[1] = 24; \r\n                        } else {\r\n                            classes[0] = 5; \r\n                            classes[1] = 6; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 63.0) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 23; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 39.5) {\r\n                        if (features[1] <= 57.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 19; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 0; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 39.04999923706055) {\r\n                if (features[1] <= 87.0) {\r\n                    if (features[2] <= 30.25) {\r\n                        if (features[3] <= 28.5) {\r\n                            classes[0] = 14; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 33; \r\n                            classes[1] = 50; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 55.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 29; \r\n                            classes[1] = 88; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 9.800000190734863) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 2; \r\n                    } else {\r\n                        if (features[3] <= 40.0) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 6; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[1] <= 87.0) {\r\n                    if (features[2] <= 46.45000076293945) {\r\n                        if (features[0] <= 5.5) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 8; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 22; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 1; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    classes[0] = 0; \r\n                    classes[1] = 15; \r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 26.5) {\r\n            if (features[0] <= 7.5) {\r\n                if (features[2] <= 40.0) {\r\n                    if (features[3] <= 22.5) {\r\n                        classes[0] = 64; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[2] <= 31.400001525878906) {\r\n                            classes[0] = 49; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 37; \r\n                            classes[1] = 12; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 77.0) {\r\n                        if (features[3] <= 21.5) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 17; \r\n                        }\r\n                    } else {\r\n                        if (features[0] <= 0.5) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                classes[0] = 0; \r\n                classes[1] = 4; \r\n            }\r\n        } else {\r\n            if (features[2] <= 26.299999237060547) {\r\n                if (features[0] <= 4.5) {\r\n                    classes[0] = 17; \r\n                    classes[1] = 0; \r\n                } else {\r\n                    if (features[3] <= 47.5) {\r\n                        classes[0] = 10; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[1] <= 73.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 6; \r\n                            classes[1] = 2; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[0] <= 6.5) {\r\n                    if (features[2] <= 43.44999694824219) {\r\n                        if (features[2] <= 43.19999694824219) {\r\n                            classes[0] = 75; \r\n                            classes[1] = 104; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 45.5) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 17; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 60.0) {\r\n                        if (features[1] <= 103.0) {\r\n                            classes[0] = 17; \r\n                            classes[1] = 89; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 2; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 3; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 27.549999237060547) {\r\n            if (features[3] <= 38.0) {\r\n                if (features[0] <= 1.5) {\r\n                    classes[0] = 40; \r\n                    classes[1] = 0; \r\n                } else {\r\n                    if (features[2] <= 26.25) {\r\n                        if (features[1] <= 63.0) {\r\n                            classes[0] = 15; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 23; \r\n                            classes[1] = 0; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 26.75) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 55.0) {\r\n                    if (features[1] <= 59.0) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[2] <= 23.950000762939453) {\r\n                            classes[0] = 1; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 1; \r\n                            classes[1] = 11; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 9; \r\n                    classes[1] = 0; \r\n                }\r\n            }\r\n        } else {\r\n            if (features[3] <= 30.5) {\r\n                if (features[0] <= 0.5) {\r\n                    if (features[3] <= 26.5) {\r\n                        if (features[2] <= 31.5) {\r\n                            classes[0] = 5; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 12; \r\n                            classes[1] = 35; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 3; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[2] <= 42.25) {\r\n                        if (features[3] <= 28.5) {\r\n                            classes[0] = 90; \r\n                            classes[1] = 31; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 15; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 99.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 17; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[3] <= 62.5) {\r\n                    if (features[2] <= 39.45000076293945) {\r\n                        if (features[3] <= 48.5) {\r\n                            classes[0] = 43; \r\n                            classes[1] = 93; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 39; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 40.0) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 13; \r\n                        } else {\r\n                            classes[0] = 2; \r\n                            classes[1] = 33; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 3; \r\n                    classes[1] = 0; \r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[3] <= 28.5) {\r\n            if (features[3] <= 22.5) {\r\n                if (features[0] <= 2.5) {\r\n                    if (features[2] <= 34.25) {\r\n                        classes[0] = 53; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[0] <= 0.5) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 6; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 57.0) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 4; \r\n                    } else {\r\n                        if (features[0] <= 3.5) {\r\n                            classes[0] = 7; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 4; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[0] <= 0.5) {\r\n                    if (features[1] <= 86.0) {\r\n                        if (features[2] <= 31.55000114440918) {\r\n                            classes[0] = 5; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 9; \r\n                            classes[1] = 23; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 89.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 6; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[0] <= 5.5) {\r\n                        if (features[2] <= 40.04999923706055) {\r\n                            classes[0] = 76; \r\n                            classes[1] = 30; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 15; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 7; \r\n                        classes[1] = 0; \r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 27.549999237060547) {\r\n                if (features[0] <= 12.5) {\r\n                    if (features[1] <= 83.0) {\r\n                        if (features[2] <= 9.800000190734863) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 2; \r\n                        } else {\r\n                            classes[0] = 36; \r\n                            classes[1] = 11; \r\n                        }\r\n                    } else {\r\n                        if (features[3] <= 57.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 0; \r\n                    classes[1] = 4; \r\n                }\r\n            } else {\r\n                if (features[0] <= 5.5) {\r\n                    if (features[0] <= 1.5) {\r\n                        if (features[1] <= 63.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 6; \r\n                        } else {\r\n                            classes[0] = 11; \r\n                            classes[1] = 27; \r\n                        }\r\n                    } else {\r\n                        if (features[1] <= 85.0) {\r\n                            classes[0] = 26; \r\n                            classes[1] = 48; \r\n                        } else {\r\n                            classes[0] = 10; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[1] <= 54.0) {\r\n                        classes[0] = 2; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[3] <= 59.0) {\r\n                            classes[0] = 14; \r\n                            classes[1] = 93; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    trees.push(function(features) {\r\n        var classes = new Array(2);\r\n        \r\n        if (features[2] <= 29.849998474121094) {\r\n            if (features[3] <= 27.5) {\r\n                if (features[0] <= 7.5) {\r\n                    if (features[1] <= 69.0) {\r\n                        if (features[2] <= 25.5) {\r\n                            classes[0] = 40; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 20; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 28.450000762939453) {\r\n                            classes[0] = 28; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    classes[0] = 0; \r\n                    classes[1] = 1; \r\n                }\r\n            } else {\r\n                if (features[1] <= 73.0) {\r\n                    if (features[1] <= 61.0) {\r\n                        if (features[0] <= 9.0) {\r\n                            classes[0] = 18; \r\n                            classes[1] = 1; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 4; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 23.450000762939453) {\r\n                            classes[0] = 2; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 6; \r\n                            classes[1] = 22; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[3] <= 30.5) {\r\n                        classes[0] = 8; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[3] <= 61.0) {\r\n                            classes[0] = 20; \r\n                            classes[1] = 12; \r\n                        } else {\r\n                            classes[0] = 7; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (features[2] <= 40.75) {\r\n                if (features[3] <= 28.5) {\r\n                    if (features[2] <= 38.04999923706055) {\r\n                        if (features[1] <= 22.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 5; \r\n                        } else {\r\n                            classes[0] = 59; \r\n                            classes[1] = 30; \r\n                        }\r\n                    } else {\r\n                        classes[0] = 21; \r\n                        classes[1] = 0; \r\n                    }\r\n                } else {\r\n                    if (features[1] <= 57.0) {\r\n                        if (features[2] <= 39.20000076293945) {\r\n                            classes[0] = 9; \r\n                            classes[1] = 4; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    } else {\r\n                        if (features[2] <= 40.05000305175781) {\r\n                            classes[0] = 42; \r\n                            classes[1] = 110; \r\n                        } else {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (features[1] <= 64.5) {\r\n                    if (features[3] <= 29.5) {\r\n                        classes[0] = 3; \r\n                        classes[1] = 0; \r\n                    } else {\r\n                        if (features[1] <= 35.0) {\r\n                            classes[0] = 0; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 0; \r\n                            classes[1] = 1; \r\n                        }\r\n                    }\r\n                } else {\r\n                    if (features[2] <= 44.5) {\r\n                        classes[0] = 0; \r\n                        classes[1] = 34; \r\n                    } else {\r\n                        if (features[2] <= 45.349998474121094) {\r\n                            classes[0] = 3; \r\n                            classes[1] = 0; \r\n                        } else {\r\n                            classes[0] = 4; \r\n                            classes[1] = 31; \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        return findMax(classes);\r\n    });\r\n    \r\n    this.predict = function(features) {\r\n        var classes = new Array(2).fill(0);\r\n        for (var i = 0; i < trees.length; i++) {\r\n            classes[trees[i](features)]++;\r\n        }\r\n        return findMax(classes);\r\n    }\r\n\r\n};\r\n\r\nif (typeof process !== 'undefined' && typeof process.argv !== 'undefined') {\r\n    if (process.argv.length - 2 == 4) {\r\n\r\n        // Features:\r\n        var features = process.argv.slice(2);\r\n\r\n        // Prediction:\r\n        var prediction = new RandomForestClassifier().predict(features);\r\n        console.log(prediction);\r\n\r\n    }\r\n}\r\n\r\n//export var RandomForestClassifier = RandomForestClassifier;","import {RandomForestClassifier} from './diabetes_model.js';\r\n\r\ndocument.getElementById(\"predict_button\").addEventListener(\"click\", display_predicton);\r\n\r\nfunction predict(features) {\r\n    return new RandomForestClassifier().predict(features);\r\n}\r\n\r\nfunction display_predicton() {\r\n    var features=[document.getElementById(\"pregnancies\").value,\r\n              document.getElementById(\"bloodpressure\").value,\r\n              document.getElementById(\"bmi\").value,\r\n              document.getElementById(\"age\").value];\r\n    \r\n    var prediction=predict(features) == 1 ? \"Diabetes alert\" : \"Possibly no diabetes\";\r\n\r\n    document.getElementById(\"results\").innerHTML=prediction;\r\n}\r\n\r\n\r\nvar coll = document.getElementsByClassName(\"collapsible\");\r\nvar i;\r\n\r\nfor (i = 0; i < coll.length; i++) {\r\n  coll[i].addEventListener(\"click\", function() {\r\n    this.classList.toggle(\"active\");\r\n    var content = this.nextElementSibling;\r\n    if (content.style.display === \"block\") {\r\n      content.style.display = \"none\";\r\n    } else {\r\n      content.style.display = \"block\";\r\n    }\r\n  });\r\n}"]}